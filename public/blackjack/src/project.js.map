{"version":3,"sources":["project.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","ActorRenderer","module","cc","_RFpush","Game","Types","Utils","ActorPlayingState","Class","extends","Component","properties","playerInfo","default","type","Node","stakeOnTable","cardInfo","cardPrefab","Prefab","anchorCards","spPlayerName","Sprite","labelPlayerName","Label","labelTotalStake","spPlayerPhoto","spCountdown","labelStakeOnTable","spChips","labelCardInfo","spCardInfo","animFX","cardSpace","onLoad","init","playerInfoPos","stakePos","turnDuration","switchSide","this","actor","getComponent","sgCountdown","position","string","name","updateTotalStake","gold","photoIdx","spriteFrame","instance","assetMng","playerPhotos","show","active","progressTimer","initCountdown","initDealer","num","countdownTex","texCountdown","getTexture","_ccsg","ProgressTimer","setName","setMidpoint","p","setType","Type","RADIAL","_sgNode","addChild","setPosition","setPercentage","startCountdown","fromTo","progressFromTo","runAction","resetCountdown","stopAllActions","playBlackJackFX","playFX","playBustFX","onDeal","card","newCard","instantiate","node","reveal","startPos","index","cards","endPos","moveAction","moveTo","callback","callFunc","_onDealEnd","sequence","target","pointX","state","Normal","updatePoint","_updatePointPos","onReset","removeAllChildren","_resetChips","onRevealHoldCard","find","updateState","bestPoint","hand","Hand","BlackJack","FiveCard","xPos","setPositionX","showStakeChips","stake","chips","count","enabled","texCardInfo","Bust","min","getMinMaxPoint","texBust","Stand","max","_RFpop","Actor","serializable","visible","holeCard","get","minMax","canReport","renderer","notify","oldState","ready","addCard","push","concat","isBust","addHoleCard","stand","revealHoldCard","unshift","report","Report","reset","reported","AssetMng","SpriteFrame","texBetCountdown","AudioMng","winAudio","url","AudioClip","loseAudio","cardAudio","buttonAudio","chipsAudio","bgm","playMusic","audioEngine","pauseMusic","resumeMusic","_playSFX","clip","playEffect","playWin","playLose","playCard","playChips","playButton","Bet","chipPrefab","btnChips","chipValues","anchorChipToss","_registerBtns","self","registerBtn","on","event","addStake","playAddChip","randomMinus1To1","chip","play","resetChips","resetStake","info","resetTossedChips","ButtonScaler","pressedScale","transDuration","onTouchDown","audioMng","scaleDownAction","onTouchUp","scaleUpAction","initScale","scale","button","Button","scaleTo","Card","point","suit","mainPic","cardBG","redTextColor","Color","WHITE","blackTextColor","texFrontBG","texBackBG","texFaces","texSuitBig","texSuitSmall","isFaceCard","pointName","color","isRedSuit","isFaceUp","CounterTest","GREEN","update","dt","Dealer","override","_super","wantHit","player","outcome","_getPlayerResult","Outcome","Win","Lose","Decks","numberOfDecks","_numberOfDecks","_cardIds","Array","prototype","fromId","cardId","draw","cardIds","len","random","Math","result","last","FXPlayer","anim","Animation","sprite","_show","hideFX","players","Fsm","playerAnchors","playerPrefab","dealer","inGameUI","betUI","betDuration","totalChipsNum","totalDiamondNum","statics","createPlayers","resultTxt","totalChips","labelTotalChips","decks","fsm","updateTotalChips","delta","console","log","stakeNum","playerNode","anchor","getPosition","actorRenderer","hit","onPlayerActed","deal","toDeal","start","toBet","quitToMenu","director","loadScene","onEnterDealState","holdCard","onDealed","onPlayersTurnState","enter","showGameState","onEnterDealersTurnState","onDealerActed","onEndState","showResultState","winChipsNum","Tie","onBetState","showBetState","PlayerData","game-fsm","InGameUI","panelChat","panelSocial","betStateUI","gameStateUI","betCounter","btnStart","setColor","BLACK","reverseDir","height","toggleChat","toggleSocial","Menu","playGame","NewScript","Player","labelStake","updateStake","number","RankItem","spRankBG","labelRank","labelGold","texRankBG","texPlayerPhoto","rank","toString","RankList","scrollView","ScrollView","prefabRankItem","rankCount","content","populateList","item","SideSwitcher","retainSideNodes","scaleX","curNode","TossChip","Object","defineProperties","value","writable","id","A2_10JQK","suitName","Suit","isBlackSuit","Spade","Club","Heart","Diamond","Enum","split","hasAce","sum","isMobile","sys","message","msgToEvaluate","model","playing","State","evaluating","StateMachine","initial","PseudoState","PseudoStateKind","Initial","bet","settled","to","when","entry","exit","initialP","playersTurn","dealersTurn","StateMachineInstance","initialise","_evaluate","setTimeout","evaluate","_getInstance","_getModel","state.com","StateJS","Behavior","behavior","actions","apply","arguments","hasActions","invoke","history","forEach","action","TransitionKind","Element","parent","qualifiedName","namespaceSeparator","__extends","undefined","d","b","__","constructor","hasOwnProperty","Region","vertices","regions","getRoot","clean","accept","visitor","arg1","arg2","arg3","visitRegion","defaultName","Vertex","defaultRegion","outgoing","region","kind","External","Transition","isHistory","DeepHistory","ShallowHistory","isInitial","visitPseudoState","exitBehavior","entryBehavior","reduce","isFinal","isSimple","isComposite","isOrthogonal","exitAction","entryAction","visitState","FinalState","visitFinalState","visitStateMachine","source","_this","transitionBehavior","onTraverse","Internal","guard","TrueGuard","FalseGuard","effect","transitionAction","visitTransition","Visitor","visitElement","element","vertex","visitVertex","transition","pseudoState","finalState","stateMachine","isTerminated","setCurrent","getCurrent","setRandom","generator","getRandom","floor","isActive","_x","_x2","_again","stateMachineInstance","isComplete","every","stateMachineModel","autoInitialiseModel","onInitialise","InitialiseElements","evaluateState","transitions","filter","traverse","error","Junction","selectTransition","Choice","results","findElse","leave","elementBehavior","beginEnter","endEnter","ancestors","InitialiseTransitions","behaviour","Local","visitLocalTransition","visitExternalTransition","targetAncestors","cascadeElementEntry","sourceAncestors","next","task","behaviours","deepHistoryAbove","defaultConsole","regionInitial","Terminate","optionalParams","_i","warn","validate","Validator","indexOf"],"mappings":"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","file":"project.js","sourcesContent":["require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"ActorRenderer\":[function(require,module,exports){\ncc._RFpush(module, '1a792KO87NBg7vCCIp1jq+j', 'ActorRenderer');\n// scripts/ActorRenderer.js\n\n'use strict';\n\nvar Game = require('Game');\nvar Types = require('Types');\nvar Utils = require('Utils');\nvar ActorPlayingState = Types.ActorPlayingState;\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        playerInfo: {\n            'default': null,\n            type: cc.Node\n        },\n        stakeOnTable: {\n            'default': null,\n            type: cc.Node\n        },\n        cardInfo: {\n            'default': null,\n            type: cc.Node\n        },\n        cardPrefab: {\n            'default': null,\n            type: cc.Prefab\n        },\n        anchorCards: {\n            'default': null,\n            type: cc.Node\n        },\n        spPlayerName: {\n            'default': null,\n            type: cc.Sprite\n        },\n        labelPlayerName: {\n            'default': null,\n            type: cc.Label\n        },\n        labelTotalStake: {\n            'default': null,\n            type: cc.Label\n        },\n        spPlayerPhoto: {\n            'default': null,\n            type: cc.Sprite\n        },\n        spCountdown: {\n            'default': null,\n            type: cc.Sprite\n        },\n        labelStakeOnTable: {\n            'default': null,\n            type: cc.Label\n        },\n        spChips: {\n            'default': [],\n            type: cc.Sprite\n        },\n        labelCardInfo: {\n            'default': null,\n            type: cc.Label\n        },\n        spCardInfo: {\n            'default': null,\n            type: cc.Sprite\n        },\n        animFX: {\n            'default': null,\n            type: cc.Node\n        },\n        cardSpace: 0\n    },\n\n    onLoad: function onLoad() {},\n\n    init: function init(playerInfo, playerInfoPos, stakePos, turnDuration, switchSide) {\n        // actor\n        this.actor = this.getComponent('Actor');\n\n        // nodes\n        this.sgCountdown = null;\n        this.turnDuration = turnDuration;\n\n        this.playerInfo.position = playerInfoPos;\n        this.stakeOnTable.position = stakePos;\n        this.labelPlayerName.string = playerInfo.name;\n        this.updateTotalStake(playerInfo.gold);\n        var photoIdx = playerInfo.photoIdx % 5;\n        this.spPlayerPhoto.spriteFrame = Game.instance.assetMng.playerPhotos[photoIdx];\n        // fx\n        this.animFX = this.animFX.getComponent('FXPlayer');\n        this.animFX.init();\n        this.animFX.show(false);\n\n        this.cardInfo.active = false;\n\n        this.progressTimer = this.initCountdown();\n\n        // switch side\n        if (switchSide) {\n            this.spCardInfo.getComponent('SideSwitcher').switchSide();\n            this.spPlayerName.getComponent('SideSwitcher').switchSide();\n        }\n    },\n\n    initDealer: function initDealer() {\n        // actor\n        this.actor = this.getComponent('Actor');\n        // fx\n        this.animFX = this.animFX.getComponent('FXPlayer');\n        this.animFX.init();\n        this.animFX.show(false);\n    },\n\n    updateTotalStake: function updateTotalStake(num) {\n        this.labelTotalStake.string = '$' + num;\n    },\n\n    initCountdown: function initCountdown() {\n        var countdownTex = Game.instance.assetMng.texCountdown.getTexture();\n        this.sgCountdown = new _ccsg.Sprite(countdownTex);\n\n        var progressTimer = new cc.ProgressTimer(this.sgCountdown);\n        progressTimer.setName('progressTimer');\n        progressTimer.setMidpoint(cc.p(0.5, 0.5));\n        progressTimer.setType(cc.ProgressTimer.Type.RADIAL);\n        this.playerInfo._sgNode.addChild(progressTimer);\n        progressTimer.setPosition(cc.p(0, 0));\n        progressTimer.setPercentage(0);\n\n        return progressTimer;\n    },\n\n    startCountdown: function startCountdown() {\n        if (this.progressTimer) {\n            var fromTo = cc.progressFromTo(this.turnDuration, 0, 100);\n            this.progressTimer.runAction(fromTo);\n        }\n    },\n\n    resetCountdown: function resetCountdown() {\n        if (this.progressTimer) {\n            this.progressTimer.stopAllActions();\n            this.progressTimer.setPercentage(0);\n        }\n    },\n\n    playBlackJackFX: function playBlackJackFX() {\n        this.animFX.playFX('blackjack');\n    },\n\n    playBustFX: function playBustFX() {\n        this.animFX.playFX('bust');\n    },\n\n    onDeal: function onDeal(card, show) {\n        var newCard = cc.instantiate(this.cardPrefab).getComponent('Card');\n        this.anchorCards.addChild(newCard.node);\n        newCard.init(card);\n        newCard.reveal(show);\n\n        var startPos = cc.p(0, 0);\n        var index = this.actor.cards.length - 1;\n        var endPos = cc.p(this.cardSpace * index, 0);\n        newCard.node.setPosition(startPos);\n\n        var moveAction = cc.moveTo(0.5, endPos);\n        var callback = cc.callFunc(this._onDealEnd, this, this.cardSpace * index);\n        newCard.node.runAction(cc.sequence(moveAction, callback));\n    },\n\n    _onDealEnd: function _onDealEnd(target, pointX) {\n        this.resetCountdown();\n        if (this.actor.state === ActorPlayingState.Normal) {\n            this.startCountdown();\n        }\n        this.updatePoint();\n        this._updatePointPos(pointX);\n    },\n\n    onReset: function onReset() {\n        this.cardInfo.active = false;\n\n        this.anchorCards.removeAllChildren();\n\n        this._resetChips();\n    },\n\n    onRevealHoldCard: function onRevealHoldCard() {\n        var card = cc.find('cardPrefab', this.anchorCards).getComponent('Card');\n        card.reveal(true);\n        this.updateState();\n    },\n\n    updatePoint: function updatePoint() {\n        this.cardInfo.active = true;\n        this.labelCardInfo.string = this.actor.bestPoint;\n\n        switch (this.actor.hand) {\n            case Types.Hand.BlackJack:\n                this.animFX.show(true);\n                this.animFX.playFX('blackjack');\n                break;\n            case Types.Hand.FiveCard:\n                // TODO\n                break;\n        }\n    },\n\n    _updatePointPos: function _updatePointPos(xPos) {\n        this.cardInfo.setPositionX(xPos + 50);\n    },\n\n    showStakeChips: function showStakeChips(stake) {\n        var chips = this.spChips;\n        var count = 0;\n        if (stake > 50000) {\n            count = 5;\n        } else if (stake > 25000) {\n            count = 4;\n        } else if (stake > 10000) {\n            count = 3;\n        } else if (stake > 5000) {\n            count = 2;\n        } else if (stake > 0) {\n            count = 1;\n        }\n        for (var i = 0; i < count; ++i) {\n            chips[i].enabled = true;\n        }\n    },\n\n    _resetChips: function _resetChips() {\n        for (var i = 0; i < this.spChips.length; ++i) {\n            this.spChips.enabled = false;\n        }\n    },\n\n    updateState: function updateState() {\n        switch (this.actor.state) {\n            case ActorPlayingState.Normal:\n                this.cardInfo.active = true;\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\n                this.updatePoint();\n                break;\n            case ActorPlayingState.Bust:\n                var min = Utils.getMinMaxPoint(this.actor.cards).min;\n                this.labelCardInfo.string = '爆牌(' + min + ')';\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texBust;\n                this.cardInfo.active = true;\n                this.animFX.show(true);\n                this.animFX.playFX('bust');\n                this.resetCountdown();\n                break;\n            case ActorPlayingState.Stand:\n                var max = Utils.getMinMaxPoint(this.actor.cards).max;\n                this.labelCardInfo.string = '停牌(' + max + ')';\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\n                this.resetCountdown();\n                // this.updatePoint();\n                break;\n        }\n    }\n});\n\ncc._RFpop();\n},{\"Game\":\"Game\",\"Types\":\"Types\",\"Utils\":\"Utils\"}],\"Actor\":[function(require,module,exports){\ncc._RFpush(module, '7d008dTf6xB2Z0wCAdzh1Rx', 'Actor');\n// scripts/Actor.js\n\n'use strict';\n\nvar Types = require('Types');\nvar Utils = require('Utils');\nvar ActorPlayingState = Types.ActorPlayingState;\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // 所有明牌\n        cards: {\n            'default': [],\n            serializable: false,\n            visible: false\n        },\n        // 暗牌，demo 暂存\n        holeCard: {\n            'default': null,\n            serializable: false,\n            visible: false\n        },\n\n        // 手上最接近 21 点的点数（有可能超过 21 点）\n        bestPoint: {\n            get: function get() {\n                var minMax = Utils.getMinMaxPoint(this.cards);\n                return minMax.max;\n            }\n        },\n\n        // 牌型，不考虑是否爆牌\n        hand: {\n            get: function get() {\n                var count = this.cards.length;\n                if (this.holeCard) {\n                    ++count;\n                }\n                if (count >= 5) {\n                    return Types.Hand.FiveCard;\n                }\n                if (count === 2 && this.bestPoint === 21) {\n                    return Types.Hand.BlackJack;\n                }\n                return Types.Hand.Normal;\n            }\n        },\n\n        canReport: {\n            get: function get() {\n                return this.hand !== Types.Hand.Normal;\n            },\n            visible: false\n        },\n\n        renderer: {\n            'default': null,\n            type: cc.Node\n        },\n        state: {\n            'default': ActorPlayingState.Normal,\n            notify: function notify(oldState) {\n                if (this.state !== oldState) {\n                    this.renderer.updateState();\n                }\n            },\n            type: ActorPlayingState,\n            serializable: false\n        }\n    },\n\n    init: function init() {\n        this.ready = true;\n        this.renderer = this.getComponent('ActorRenderer');\n    },\n\n    addCard: function addCard(card) {\n        this.cards.push(card);\n        this.renderer.onDeal(card, true);\n\n        var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\n        if (Utils.isBust(cards)) {\n            this.state = ActorPlayingState.Bust;\n        }\n    },\n\n    addHoleCard: function addHoleCard(card) {\n        this.holeCard = card;\n        this.renderer.onDeal(card, false);\n    },\n\n    stand: function stand() {\n        this.state = ActorPlayingState.Stand;\n    },\n\n    revealHoldCard: function revealHoldCard() {\n        if (this.holeCard) {\n            this.cards.unshift(this.holeCard);\n            this.holeCard = null;\n            this.renderer.onRevealHoldCard();\n        }\n    },\n\n    // revealNormalCard: function() {\n    //     this.onRevealNormalCard();\n    // },\n\n    report: function report() {\n        this.state = ActorPlayingState.Report;\n    },\n\n    reset: function reset() {\n        this.cards = [];\n        this.holeCard = null;\n        this.reported = false;\n        this.state = ActorPlayingState.Normal;\n        this.renderer.onReset();\n    }\n});\n\ncc._RFpop();\n},{\"Types\":\"Types\",\"Utils\":\"Utils\"}],\"AssetMng\":[function(require,module,exports){\ncc._RFpush(module, '54522LcoVpPHbrqYgwp/1Qm', 'AssetMng');\n// scripts/AssetMng.js\n\n\"use strict\";\n\nvar AssetMng = cc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        texBust: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        texCardInfo: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        texCountdown: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        texBetCountdown: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        playerPhotos: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        }\n    }\n});\n\ncc._RFpop();\n},{}],\"AudioMng\":[function(require,module,exports){\ncc._RFpush(module, '01ca4tStvVH+JmZ5TNcmuAu', 'AudioMng');\n// scripts/AudioMng.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        winAudio: {\n            \"default\": null,\n            url: cc.AudioClip\n        },\n\n        loseAudio: {\n            \"default\": null,\n            url: cc.AudioClip\n        },\n\n        cardAudio: {\n            \"default\": null,\n            url: cc.AudioClip\n        },\n\n        buttonAudio: {\n            \"default\": null,\n            url: cc.AudioClip\n        },\n\n        chipsAudio: {\n            \"default\": null,\n            url: cc.AudioClip\n        },\n\n        bgm: {\n            \"default\": null,\n            url: cc.AudioClip\n        }\n    },\n\n    playMusic: function playMusic() {\n        cc.audioEngine.playMusic(this.bgm, true);\n    },\n\n    pauseMusic: function pauseMusic() {\n        cc.audioEngine.pauseMusic();\n    },\n\n    resumeMusic: function resumeMusic() {\n        cc.audioEngine.resumeMusic();\n    },\n\n    _playSFX: function _playSFX(clip) {\n        cc.audioEngine.playEffect(clip, false);\n    },\n\n    playWin: function playWin() {\n        this._playSFX(this.winAudio);\n    },\n\n    playLose: function playLose() {\n        this._playSFX(this.loseAudio);\n    },\n\n    playCard: function playCard() {\n        this._playSFX(this.cardAudio);\n    },\n\n    playChips: function playChips() {\n        this._playSFX(this.chipsAudio);\n    },\n\n    playButton: function playButton() {\n        this._playSFX(this.buttonAudio);\n    }\n});\n\ncc._RFpop();\n},{}],\"Bet\":[function(require,module,exports){\ncc._RFpush(module, '28f38yToT1Pw7NgyeCvRxDC', 'Bet');\n// scripts/Bet.js\n\n'use strict';\n\nvar Game = require('Game');\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        chipPrefab: {\n            'default': null,\n            type: cc.Prefab\n        },\n        btnChips: {\n            'default': [],\n            type: cc.Node\n        },\n        chipValues: {\n            'default': [],\n            type: 'Integer'\n        },\n        anchorChipToss: {\n            'default': null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    init: function init() {\n        this._registerBtns();\n    },\n\n    _registerBtns: function _registerBtns() {\n        var self = this;\n        var registerBtn = function registerBtn(index) {\n            self.btnChips[i].on('touchstart', function (event) {\n                if (Game.instance.addStake(self.chipValues[index])) {\n                    self.playAddChip();\n                }\n            }, this);\n        };\n        for (var i = 0; i < self.btnChips.length; ++i) {\n            registerBtn(i);\n        }\n    },\n\n    playAddChip: function playAddChip() {\n        var startPos = cc.p(cc.randomMinus1To1() * 50, cc.randomMinus1To1() * 50);\n        var chip = cc.instantiate(this.chipPrefab);\n        this.anchorChipToss.addChild(chip);\n        chip.setPosition(startPos);\n        chip.getComponent('TossChip').play();\n    },\n\n    resetChips: function resetChips() {\n        Game.instance.resetStake();\n        Game.instance.info.enabled = false;\n        this.resetTossedChips();\n    },\n\n    resetTossedChips: function resetTossedChips() {\n        this.anchorChipToss.removeAllChildren();\n    }\n});\n\ncc._RFpop();\n},{\"Game\":\"Game\"}],\"ButtonScaler\":[function(require,module,exports){\ncc._RFpush(module, 'a171dSnCXFMRIqs1IWdvgWM', 'ButtonScaler');\n// scripts/UI/ButtonScaler.js\n\n'use strict';\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        pressedScale: 1,\n        transDuration: 0\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var self = this;\n        var audioMng = cc.find('Menu/AudioMng') || cc.find('Game/AudioMng');\n        if (audioMng) {\n            audioMng = audioMng.getComponent('AudioMng');\n        }\n        self.initScale = this.node.scale;\n        self.button = self.getComponent(cc.Button);\n        self.scaleDownAction = cc.scaleTo(self.transDuration, self.pressedScale);\n        self.scaleUpAction = cc.scaleTo(self.transDuration, self.initScale);\n        function onTouchDown(event) {\n            this.stopAllActions();\n            if (audioMng) audioMng.playButton();\n            this.runAction(self.scaleDownAction);\n        }\n        function onTouchUp(event) {\n            this.stopAllActions();\n            this.runAction(self.scaleUpAction);\n        }\n        this.node.on('touchstart', onTouchDown, this.node);\n        this.node.on('touchend', onTouchUp, this.node);\n        this.node.on('touchcancel', onTouchUp, this.node);\n    }\n});\n\ncc._RFpop();\n},{}],\"Card\":[function(require,module,exports){\ncc._RFpush(module, 'ab67e5QkiVCBZ3DIMlWhiAt', 'Card');\n// scripts/Card.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // nodes\n        point: {\n            \"default\": null,\n            type: cc.Label\n        },\n        suit: {\n            \"default\": null,\n            type: cc.Sprite\n        },\n        mainPic: {\n            \"default\": null,\n            type: cc.Sprite\n        },\n        cardBG: {\n            \"default\": null,\n            type: cc.Sprite\n        },\n        // resources\n        redTextColor: cc.Color.WHITE,\n        blackTextColor: cc.Color.WHITE,\n        texFrontBG: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        texBackBG: {\n            \"default\": null,\n            type: cc.SpriteFrame\n        },\n        texFaces: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        },\n        texSuitBig: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        },\n        texSuitSmall: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        }\n    },\n\n    // use this for initialization\n    init: function init(card) {\n        var isFaceCard = card.point > 10;\n\n        if (isFaceCard) {\n            this.mainPic.spriteFrame = this.texFaces[card.point - 10 - 1];\n        } else {\n            this.mainPic.spriteFrame = this.texSuitBig[card.suit - 1];\n        }\n\n        // for jsb\n        this.point.string = card.pointName;\n\n        if (card.isRedSuit) {\n            this.point.node.color = this.redTextColor;\n        } else {\n            this.point.node.color = this.blackTextColor;\n        }\n\n        this.suit.spriteFrame = this.texSuitSmall[card.suit - 1];\n    },\n\n    reveal: function reveal(isFaceUp) {\n        this.point.node.active = isFaceUp;\n        this.suit.node.active = isFaceUp;\n        this.mainPic.node.active = isFaceUp;\n        this.cardBG.spriteFrame = isFaceUp ? this.texFrontBG : this.texBackBG;\n    }\n});\n\ncc._RFpop();\n},{}],\"CounterTest\":[function(require,module,exports){\ncc._RFpush(module, 'b0926/aIatATYgTuL0RyW/q', 'CounterTest');\n// scripts/CounterTest.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // ...\n        target: {\n            \"default\": null,\n            type: cc.Label\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.target.node.color = cc.Color.GREEN;\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{}],\"Dealer\":[function(require,module,exports){\ncc._RFpush(module, 'ce2dfoqEulHCLjS1Z9xPN7t', 'Dealer');\n// scripts/Dealer.js\n\n'use strict';\n\nvar Actor = require('Actor');\nvar Utils = require('Utils');\n\ncc.Class({\n    'extends': Actor,\n\n    properties: {\n        // 手上最接近 21 点的点数（有可能超过 21 点）\n        bestPoint: {\n            get: function get() {\n                var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\n                var minMax = Utils.getMinMaxPoint(cards);\n                return minMax.max;\n            },\n            override: true\n        }\n    },\n\n    init: function init() {\n        this._super();\n        this.renderer.initDealer();\n    },\n\n    // 返回是否要牌\n    wantHit: function wantHit() {\n        var Game = require('Game');\n        var Types = require('Types');\n\n        var bestPoint = this.bestPoint;\n\n        // 已经最大点数\n        if (bestPoint === 21) {\n            return false;\n        }\n\n        // 不论抽到什么牌肯定不会爆，那就接着抽\n        if (bestPoint <= 21 - 10) {\n            return true;\n        }\n\n        var player = Game.instance.player;\n        var outcome = Game.instance._getPlayerResult(player, this);\n\n        switch (outcome) {\n            case Types.Outcome.Win:\n                return true;\n            case Types.Outcome.Lose:\n                return false;\n        }\n\n        return this.bestPoint < 17;\n    }\n});\n\ncc._RFpop();\n},{\"Actor\":\"Actor\",\"Game\":\"Game\",\"Types\":\"Types\",\"Utils\":\"Utils\"}],\"Decks\":[function(require,module,exports){\ncc._RFpush(module, '17024G0JFpHcLI5GREbF8VN', 'Decks');\n// scripts/module/Decks.js\n\n'use strict';\n\nvar Types = require('Types');\n\n/**\n * 扑克管理类，用来管理一副或多副牌\n * @class Decks\n * @constructor\n * @param {number} numberOfDecks - 总共几副牌\n */\nfunction Decks(numberOfDecks) {\n    // 总共几副牌\n    this._numberOfDecks = numberOfDecks;\n    // 还没发出去的牌\n    this._cardIds = new Array(numberOfDecks * 52);\n\n    this.reset();\n}\n\n/**\n * 重置所有牌\n * @method reset\n */\nDecks.prototype.reset = function () {\n    this._cardIds.length = this._numberOfDecks * 52;\n    var index = 0;\n    var fromId = Types.Card.fromId;\n    for (var i = 0; i < this._numberOfDecks; ++i) {\n        for (var cardId = 0; cardId < 52; ++cardId) {\n            this._cardIds[index] = fromId(cardId);\n            ++index;\n        }\n    }\n};\n\n/**\n * 随机抽一张牌，如果已经没牌了，将返回 null\n * @method draw\n * @return {Card}\n */\nDecks.prototype.draw = function () {\n    var cardIds = this._cardIds;\n    var len = cardIds.length;\n    if (len === 0) {\n        return null;\n    }\n\n    var random = Math.random();\n    var index = random * len | 0;\n    var result = cardIds[index];\n\n    // 保持数组紧凑\n    var last = cardIds[len - 1];\n    cardIds[index] = last;\n    cardIds.length = len - 1;\n\n    return result;\n};\n\n///**\n// * 发一张牌\n// * @method deal\n// * @return {Card}\n// */\n//Decks.prototype.deal = function () {\n//    this._cardIds.pop();\n//};\n\n///**\n// * 洗牌\n// * @method shuffle\n// */\n//Decks.prototype.shuffle = function () {\n//    shuffleArray(this._cardIds);\n//};\n//\n///**\n// * Randomize array element order in-place.\n// * Using Durstenfeld shuffle algorithm.\n// * http://stackoverflow.com/a/12646864\n// */\n//function shuffleArray(array) {\n//    for (var i = array.length - 1; i > 0; i--) {\n//        var j = (Math.random() * (i + 1)) | 0;\n//        var temp = array[i];\n//        array[i] = array[j];\n//        array[j] = temp;\n//    }\n//    return array;\n//}\n\nmodule.exports = Decks;\n\ncc._RFpop();\n},{\"Types\":\"Types\"}],\"FXPlayer\":[function(require,module,exports){\ncc._RFpush(module, '68da2yjdGVMSYhXLN9DukIB', 'FXPlayer');\n// scripts/FXPlayer.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    // use this for initialization\n    init: function init() {\n        this.anim = this.getComponent(cc.Animation);\n        this.sprite = this.getComponent(cc.Sprite);\n    },\n\n    show: function show(_show) {\n        this.sprite.enabled = _show;\n    },\n\n    playFX: function playFX(name) {\n        // name can be 'blackjack' or 'bust'\n        this.anim.play(name);\n    },\n\n    hideFX: function hideFX() {\n        this.sprite.enabled = false;\n    }\n});\n\ncc._RFpop();\n},{}],\"Game\":[function(require,module,exports){\ncc._RFpush(module, '63738OONCFKHqsf4QSeJSun', 'Game');\n// scripts/Game.js\n\n'use strict';\n\nvar players = require('PlayerData').players;\nvar Decks = require('Decks');\nvar Types = require('Types');\nvar ActorPlayingState = Types.ActorPlayingState;\nvar Fsm = require('game-fsm');\n\nvar Game = cc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        playerAnchors: {\n            'default': [],\n            type: cc.Node\n        },\n        playerPrefab: {\n            'default': null,\n            type: cc.Prefab\n        },\n        dealer: {\n            'default': null,\n            type: cc.Node\n        },\n        inGameUI: {\n            'default': null,\n            type: cc.Node\n        },\n        betUI: {\n            'default': null,\n            type: cc.Node\n        },\n        assetMng: {\n            'default': null,\n            type: cc.Node\n        },\n        audioMng: {\n            'default': null,\n            type: cc.Node\n        },\n        turnDuration: 0,\n        betDuration: 0,\n        totalChipsNum: 0,\n        totalDiamondNum: 0,\n        numberOfDecks: {\n            'default': 1,\n            type: 'Integer'\n        }\n    },\n\n    statics: {\n        instance: null\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        Game.instance = this;\n        this.inGameUI = this.inGameUI.getComponent('InGameUI');\n        this.assetMng = this.assetMng.getComponent('AssetMng');\n        this.audioMng = this.audioMng.getComponent('AudioMng');\n        this.betUI = this.betUI.getComponent('Bet');\n        this.inGameUI.init(this.betDuration);\n        this.betUI.init();\n        this.dealer = this.dealer.getComponent('Dealer');\n        this.dealer.init();\n\n        //\n        this.player = null;\n        this.createPlayers();\n\n        // shortcut to ui element\n        this.info = this.inGameUI.resultTxt;\n        this.totalChips = this.inGameUI.labelTotalChips;\n\n        // init logic\n        this.decks = new Decks(this.numberOfDecks);\n        this.fsm = Fsm;\n        this.fsm.init(this);\n\n        // start\n        this.updateTotalChips();\n\n        this.audioMng.playMusic();\n    },\n\n    addStake: function addStake(delta) {\n        if (this.totalChipsNum < delta) {\n            console.log('not enough chips!');\n            this.info.enabled = true;\n            this.info.string = '金币不足!';\n            return false;\n        } else {\n            this.totalChipsNum -= delta;\n            this.updateTotalChips();\n            this.player.addStake(delta);\n            this.audioMng.playChips();\n            this.info.enabled = false;\n            this.info.string = '请下注';\n            return true;\n        }\n    },\n\n    resetStake: function resetStake() {\n        this.totalChipsNum += this.player.stakeNum;\n        this.player.resetStake();\n        this.updateTotalChips();\n    },\n\n    updateTotalChips: function updateTotalChips() {\n        this.totalChips.string = this.totalChipsNum;\n        this.player.renderer.updateTotalStake(this.totalChipsNum);\n    },\n\n    createPlayers: function createPlayers() {\n        for (var i = 0; i < 5; ++i) {\n            var playerNode = cc.instantiate(this.playerPrefab);\n            var anchor = this.playerAnchors[i];\n            var switchSide = i > 2;\n            anchor.addChild(playerNode);\n            playerNode.position = cc.p(0, 0);\n\n            var playerInfoPos = cc.find('anchorPlayerInfo', anchor).getPosition();\n            var stakePos = cc.find('anchorStake', anchor).getPosition();\n            var actorRenderer = playerNode.getComponent('ActorRenderer');\n            actorRenderer.init(players[i], playerInfoPos, stakePos, this.turnDuration, switchSide);\n            if (i === 2) {\n                this.player = playerNode.getComponent('Player');\n                this.player.init();\n            }\n        }\n    },\n\n    // UI EVENT CALLBACKS\n\n    // 玩家要牌\n    hit: function hit() {\n        this.player.addCard(this.decks.draw());\n        if (this.player.state === ActorPlayingState.Bust) {\n            // if every player end\n            this.fsm.onPlayerActed();\n        }\n\n        this.audioMng.playCard();\n\n        //if (this.dealer.state === ActorPlayingState.Normal) {\n        //    if (this.dealer.wantHit()) {\n        //        this.dealer.addCard(this.decks.draw());\n        //    }\n        //    else {\n        //        this.dealer.stand();\n        //    }\n        //}\n        //\n        //if (this.dealer.state === ActorPlayingState.Bust) {\n        //    this.state = GamingState.End;\n        //}\n        this.audioMng.playButton();\n    },\n\n    // 玩家停牌\n    stand: function stand() {\n        this.player.stand();\n\n        this.audioMng.playButton();\n\n        // if every player end\n        this.fsm.onPlayerActed();\n    },\n\n    //\n    deal: function deal() {\n        this.fsm.toDeal();\n        this.audioMng.playButton();\n    },\n\n    //\n    start: function start() {\n        this.fsm.toBet();\n        this.audioMng.playButton();\n    },\n\n    // 玩家报到\n    report: function report() {\n        this.player.report();\n\n        // if every player end\n        this.fsm.onPlayerActed();\n    },\n\n    quitToMenu: function quitToMenu() {\n        cc.director.loadScene('menu');\n    },\n\n    // FSM CALLBACKS\n\n    onEnterDealState: function onEnterDealState() {\n        this.betUI.resetTossedChips();\n        this.inGameUI.resetCountdown();\n        this.player.renderer.showStakeChips(this.player.stakeNum);\n        this.player.addCard(this.decks.draw());\n        var holdCard = this.decks.draw();\n        this.dealer.addHoleCard(holdCard);\n        this.player.addCard(this.decks.draw());\n        this.dealer.addCard(this.decks.draw());\n        this.audioMng.playCard();\n        this.fsm.onDealed();\n    },\n\n    onPlayersTurnState: function onPlayersTurnState(enter) {\n        if (enter) {\n            this.inGameUI.showGameState();\n        }\n    },\n\n    onEnterDealersTurnState: function onEnterDealersTurnState() {\n        while (this.dealer.state === ActorPlayingState.Normal) {\n            if (this.dealer.wantHit()) {\n                this.dealer.addCard(this.decks.draw());\n            } else {\n                this.dealer.stand();\n            }\n        }\n        this.fsm.onDealerActed();\n    },\n\n    // 结算\n    onEndState: function onEndState(enter) {\n        if (enter) {\n            this.dealer.revealHoldCard();\n            this.inGameUI.showResultState();\n\n            var outcome = this._getPlayerResult(this.player, this.dealer);\n            switch (outcome) {\n                case Types.Outcome.Win:\n                    this.info.string = 'You Win';\n                    this.audioMng.pauseMusic();\n                    this.audioMng.playWin();\n                    // 拿回原先自己的筹码\n                    this.totalChipsNum += this.player.stakeNum;\n                    // 奖励筹码\n                    var winChipsNum = this.player.stakeNum;\n                    if (!this.player.state === Types.ActorPlayingState.Report) {\n                        if (this.player.hand === Types.Hand.BlackJack) {\n                            winChipsNum *= 1.5;\n                        } else {\n                            // 五小龙\n                            winChipsNum *= 2.0;\n                        }\n                    }\n                    this.totalChipsNum += winChipsNum;\n                    this.updateTotalChips();\n                    break;\n\n                case Types.Outcome.Lose:\n                    this.info.string = 'You Lose';\n                    this.audioMng.pauseMusic();\n                    this.audioMng.playLose();\n                    break;\n\n                case Types.Outcome.Tie:\n                    this.info.string = 'Draw';\n                    // 退还筹码\n                    this.totalChipsNum += this.player.stakeNum;\n                    this.updateTotalChips();\n                    break;\n            }\n        }\n\n        this.info.enabled = enter;\n    },\n\n    // 下注\n    onBetState: function onBetState(enter) {\n        if (enter) {\n            this.decks.reset();\n            this.player.reset();\n            this.dealer.reset();\n            this.info.string = '请下注';\n            this.inGameUI.showBetState();\n            this.inGameUI.startCountdown();\n\n            this.audioMng.resumeMusic();\n        }\n        this.info.enabled = enter;\n    },\n\n    // PRIVATES\n\n    // 判断玩家输赢\n    _getPlayerResult: function _getPlayerResult(player, dealer) {\n        var Outcome = Types.Outcome;\n        if (player.state === ActorPlayingState.Bust) {\n            return Outcome.Lose;\n        } else if (dealer.state === ActorPlayingState.Bust) {\n            return Outcome.Win;\n        } else {\n            if (player.state === ActorPlayingState.Report) {\n                return Outcome.Win;\n            } else {\n                if (player.hand > dealer.hand) {\n                    return Outcome.Win;\n                } else if (player.hand < dealer.hand) {\n                    return Outcome.Lose;\n                } else {\n                    if (player.bestPoint === dealer.bestPoint) {\n                        return Outcome.Tie;\n                    } else if (player.bestPoint < dealer.bestPoint) {\n                        return Outcome.Lose;\n                    } else {\n                        return Outcome.Win;\n                    }\n                }\n            }\n        }\n    }\n\n});\n\ncc._RFpop();\n},{\"Decks\":\"Decks\",\"PlayerData\":\"PlayerData\",\"Types\":\"Types\",\"game-fsm\":\"game-fsm\"}],\"InGameUI\":[function(require,module,exports){\ncc._RFpush(module, 'f192efroeFEyaxtfh8TVXYz', 'InGameUI');\n// scripts/UI/InGameUI.js\n\n'use strict';\n\nvar Game = require('Game');\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        panelChat: {\n            'default': null,\n            type: cc.Node\n        },\n        panelSocial: {\n            'default': null,\n            type: cc.Node\n        },\n        betStateUI: {\n            'default': null,\n            type: cc.Node\n        },\n        gameStateUI: {\n            'default': null,\n            type: cc.Node\n        },\n        resultTxt: {\n            'default': null,\n            type: cc.Label\n        },\n        betCounter: {\n            'default': null,\n            type: cc.Node\n        },\n        btnStart: {\n            'default': null,\n            type: cc.Node\n        },\n        labelTotalChips: {\n            'default': null,\n            type: cc.Label\n        }\n    },\n\n    // use this for initialization\n    init: function init(betDuration) {\n        this.panelChat.active = false;\n        this.panelSocial.active = false;\n        this.resultTxt.enabled = false;\n        this.betStateUI.active = true;\n        this.gameStateUI.active = false;\n        // this.resultStateUI.active = false;\n        this.btnStart.active = false;\n        this.betDuration = betDuration;\n        this.progressTimer = this.initCountdown();\n    },\n\n    initCountdown: function initCountdown() {\n        var countdownTex = Game.instance.assetMng.texBetCountdown.getTexture();\n        this.sgCountdown = new _ccsg.Sprite(countdownTex);\n        this.sgCountdown.setColor(cc.Color.BLACK);\n\n        var progressTimer = new cc.ProgressTimer(this.sgCountdown);\n        progressTimer.setName('progressTimer');\n        progressTimer.setMidpoint(cc.p(0.5, 0.5));\n        progressTimer.setType(cc.ProgressTimer.Type.RADIAL);\n        progressTimer.reverseDir = true;\n        this.betCounter._sgNode.addChild(progressTimer);\n        progressTimer.setPosition(cc.p(0, -this.betCounter.height / 2));\n        progressTimer.setPercentage(0);\n\n        return progressTimer;\n    },\n\n    startCountdown: function startCountdown() {\n        if (this.progressTimer) {\n            var fromTo = cc.progressFromTo(this.betDuration, 0, 100);\n            this.progressTimer.runAction(fromTo);\n        }\n    },\n\n    resetCountdown: function resetCountdown() {\n        if (this.progressTimer) {\n            this.progressTimer.stopAllActions();\n            this.progressTimer.setPercentage(100);\n        }\n    },\n\n    showBetState: function showBetState() {\n        this.betStateUI.active = true;\n        this.gameStateUI.active = false;\n        this.btnStart.active = false;\n    },\n\n    showGameState: function showGameState() {\n        this.betStateUI.active = false;\n        this.gameStateUI.active = true;\n        this.btnStart.active = false;\n    },\n\n    showResultState: function showResultState() {\n        this.betStateUI.active = false;\n        this.gameStateUI.active = false;\n        this.btnStart.active = true;\n    },\n\n    toggleChat: function toggleChat() {\n        this.panelChat.active = !this.panelChat.active;\n    },\n\n    toggleSocial: function toggleSocial() {\n        this.panelSocial.active = !this.panelSocial.active;\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{\"Game\":\"Game\"}],\"Menu\":[function(require,module,exports){\ncc._RFpush(module, '20f60m+3RlGO7x2/ARzZ6Qc', 'Menu');\n// scripts/Menu.js\n\n'use strict';\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        audioMng: {\n            'default': null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.audioMng = this.audioMng.getComponent('AudioMng');\n        this.audioMng.playMusic();\n    },\n\n    playGame: function playGame() {\n        cc.director.loadScene('table');\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{}],\"NewScript\":[function(require,module,exports){\ncc._RFpush(module, '87012SkehVIdqdvmEvc4ewr', 'NewScript');\n// NewScript.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{}],\"PlayerData\":[function(require,module,exports){\ncc._RFpush(module, '4f9c5eXxqhHAKLxZeRmgHDB', 'PlayerData');\n// scripts/module/PlayerData.js\n\n'use strict';\n\nvar players = [{\n\tname: '燃烧吧，蛋蛋儿军',\n\tgold: 3000,\n\tphotoIdx: 0\n}, {\n\tname: '地方政府',\n\tgold: 2000,\n\tphotoIdx: 1\n}, {\n\tname: '手机超人',\n\tgold: 1500,\n\tphotoIdx: 2\n}, {\n\tname: '天灵灵，地灵灵',\n\tgold: 500,\n\tphotoIdx: 3\n}, {\n\tname: '哟哟，切克闹',\n\tgold: 9000,\n\tphotoIdx: 4\n}, {\n\tname: '学姐不要死',\n\tgold: 5000,\n\tphotoIdx: 5\n}, {\n\tname: '提百万',\n\tgold: 10000,\n\tphotoIdx: 6\n}];\n\nmodule.exports = {\n\tplayers: players\n};\n\ncc._RFpop();\n},{}],\"Player\":[function(require,module,exports){\ncc._RFpush(module, '226a2AvzRpHL7SJGTMy5PDX', 'Player');\n// scripts/Player.js\n\n'use strict';\n\nvar Actor = require('Actor');\n\ncc.Class({\n    'extends': Actor,\n\n    init: function init() {\n        this._super();\n        this.labelStake = this.renderer.labelStakeOnTable;\n        this.stakeNum = 0;\n    },\n\n    reset: function reset() {\n        this._super();\n        this.resetStake();\n    },\n\n    addCard: function addCard(card) {\n        this._super(card);\n\n        // var Game = require('Game');\n        // Game.instance.canReport = this.canReport;\n    },\n\n    addStake: function addStake(delta) {\n        this.stakeNum += delta;\n        this.updateStake(this.stakeNum);\n    },\n\n    resetStake: function resetStake(delta) {\n        this.stakeNum = 0;\n        this.updateStake(this.stakeNum);\n    },\n\n    updateStake: function updateStake(number) {\n        this.labelStake.string = number;\n    }\n\n});\n\ncc._RFpop();\n},{\"Actor\":\"Actor\"}],\"RankItem\":[function(require,module,exports){\ncc._RFpush(module, '1657ewfijBOXLq5zGqr6PvE', 'RankItem');\n// scripts/UI/RankItem.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        spRankBG: {\n            \"default\": null,\n            type: cc.Sprite\n        },\n        labelRank: {\n            \"default\": null,\n            type: cc.Label\n        },\n        labelPlayerName: {\n            \"default\": null,\n            type: cc.Label\n        },\n        labelGold: {\n            \"default\": null,\n            type: cc.Label\n        },\n        spPlayerPhoto: {\n            \"default\": null,\n            type: cc.Sprite\n        },\n        texRankBG: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        },\n        texPlayerPhoto: {\n            \"default\": [],\n            type: cc.SpriteFrame\n        }\n        // ...\n    },\n\n    // use this for initialization\n    init: function init(rank, playerInfo) {\n        if (rank < 3) {\n            // should display trophy\n            this.labelRank.node.active = false;\n            this.spRankBG.spriteFrame = this.texRankBG[rank];\n        } else {\n            this.labelRank.node.active = true;\n            this.labelRank.string = (rank + 1).toString();\n        }\n\n        this.labelPlayerName.string = playerInfo.name;\n        this.labelGold.string = playerInfo.gold.toString();\n        this.spPlayerPhoto.spriteFrame = this.texPlayerPhoto[playerInfo.photoIdx];\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{}],\"RankList\":[function(require,module,exports){\ncc._RFpush(module, 'fe3fcIxCFFLrKHg6s5+xRUU', 'RankList');\n// scripts/UI/RankList.js\n\n'use strict';\n\nvar players = require('PlayerData').players;\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        scrollView: {\n            'default': null,\n            type: cc.ScrollView\n        },\n        prefabRankItem: {\n            'default': null,\n            type: cc.Prefab\n        },\n        rankCount: 0\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.content = this.scrollView.content;\n        this.populateList();\n    },\n\n    populateList: function populateList() {\n        for (var i = 0; i < this.rankCount; ++i) {\n            var playerInfo = players[i];\n            var item = cc.instantiate(this.prefabRankItem);\n            item.getComponent('RankItem').init(i, playerInfo);\n            this.content.addChild(item);\n        }\n    },\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{\"PlayerData\":\"PlayerData\"}],\"SideSwitcher\":[function(require,module,exports){\ncc._RFpush(module, '3aae7lZKyhPqqsLD3wMKl6X', 'SideSwitcher');\n// scripts/SideSwitcher.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        retainSideNodes: {\n            \"default\": [],\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    switchSide: function switchSide() {\n        this.node.scaleX = -this.node.scaleX;\n        for (var i = 0; i < this.retainSideNodes.length; ++i) {\n            var curNode = this.retainSideNodes[i];\n            curNode.scaleX = -curNode.scaleX;\n        }\n    }\n});\n\ncc._RFpop();\n},{}],\"TossChip\":[function(require,module,exports){\ncc._RFpush(module, 'b4eb5Lo6U1IZ4eJWuxShCdH', 'TossChip');\n// scripts/TossChip.js\n\n'use strict';\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        anim: {\n            'default': null,\n            type: cc.Animation\n        }\n    },\n\n    // use this for initialization\n    play: function play() {\n        this.anim.play('chip_toss');\n    }\n});\n\ncc._RFpop();\n},{}],\"Types\":[function(require,module,exports){\ncc._RFpush(module, '5b633QMQxpFmYetofEvK2UD', 'Types');\n// scripts/module/Types.js\n\n'use strict';\n\nvar Suit = cc.Enum({\n    Spade: 1, // 黑桃\n    Heart: 2, // 红桃\n    Club: 3, // 梅花(黑)\n    Diamond: 4 });\n\n// 方块(红)\nvar A2_10JQK = 'NAN,A,2,3,4,5,6,7,8,9,10,J,Q,K'.split(',');\n\n/**\n * 扑克牌类，只用来表示牌的基本属性，不包含游戏逻辑，所有属性只读，\n * 因此全局只需要有 52 个实例（去掉大小王），不论有多少副牌\n * @class Card\n * @constructor\n * @param {Number} point - 可能的值为 1 到 13\n * @param {Suit} suit\n */\nfunction Card(point, suit) {\n    Object.defineProperties(this, {\n        point: {\n            value: point,\n            writable: false\n        },\n        suit: {\n            value: suit,\n            writable: false\n        },\n        /**\n         * @property {Number} id - 可能的值为 0 到 51\n         */\n        id: {\n            value: (suit - 1) * 13 + (point - 1),\n            writable: false\n        },\n        //\n        pointName: {\n            get: function get() {\n                return A2_10JQK[this.point];\n            }\n        },\n        suitName: {\n            get: function get() {\n                return Suit[this.suit];\n            }\n        },\n        isBlackSuit: {\n            get: function get() {\n                return this.suit === Suit.Spade || this.suit === Suit.Club;\n            }\n        },\n        isRedSuit: {\n            get: function get() {\n                return this.suit === Suit.Heart || this.suit === Suit.Diamond;\n            }\n        }\n    });\n}\n\nCard.prototype.toString = function () {\n    return this.suitName + ' ' + this.pointName;\n};\n\n// 存放 52 张扑克的实例\nvar cards = new Array(52);\n\n/**\n * 返回指定 id 的实例\n * @param {Number} id - 0 到 51\n */\nCard.fromId = function (id) {\n    return cards[id];\n};\n\n// 初始化所有扑克牌\n(function createCards() {\n    for (var s = 1; s <= 4; s++) {\n        for (var p = 1; p <= 13; p++) {\n            var card = new Card(p, s);\n            cards[card.id] = card;\n        }\n    }\n})();\n\n// 手中牌的状态\nvar ActorPlayingState = cc.Enum({\n    Normal: -1,\n    Stand: -1, // 停牌\n    Report: -1, // 报到\n    Bust: -1 });\n\n// 输赢\n// 爆了\nvar Outcome = cc.Enum({\n    Win: -1,\n    Lose: -1,\n    Tie: -1\n});\n\n// 牌型，值越大越厉害\nvar Hand = cc.Enum({\n    Normal: -1, // 无\n    BlackJack: -1, // 黑杰克\n    FiveCard: -1 });\n\n// 五小龙\nmodule.exports = {\n    Suit: Suit,\n    Card: Card,\n    ActorPlayingState: ActorPlayingState,\n    Hand: Hand,\n    Outcome: Outcome\n};\n\ncc._RFpop();\n},{}],\"Utils\":[function(require,module,exports){\ncc._RFpush(module, '73590esk6xP9ICqhfUZalMg', 'Utils');\n// scripts/module/Utils.js\n\n\n// 返回尽可能不超过 21 点的最小和最大点数\n\"use strict\";\n\nfunction getMinMaxPoint(cards) {\n    var hasAce = false;\n    var min = 0;\n    for (var i = 0; i < cards.length; i++) {\n        var card = cards[i];\n        if (card.point === 1) {\n            hasAce = true;\n        }\n        min += Math.min(10, card.point);\n    }\n    var max = min;\n    // 如果有 1 个 A 可以当成 11\n    if (hasAce && min + 10 <= 21) {\n        // （如果两个 A 都当成 11，那么总分最小也会是 22，爆了，所以最多只能有一个 A 当成 11）\n        max += 10;\n    }\n\n    return {\n        min: min,\n        max: max\n    };\n}\n\nfunction isBust(cards) {\n    var sum = 0;\n    for (var i = 0; i < cards.length; i++) {\n        var card = cards[i];\n        sum += Math.min(10, card.point);\n    }\n    return sum > 21;\n}\n\nvar isMobile = function isMobile() {\n    return cc.sys.isMobile;\n};\n\nmodule.exports = {\n    isBust: isBust,\n    getMinMaxPoint: getMinMaxPoint,\n    isMobile: isMobile\n};\n\ncc._RFpop();\n},{}],\"game-fsm\":[function(require,module,exports){\ncc._RFpush(module, '6510d1SmQRMMYH8FEIA7zXq', 'game-fsm');\n// scripts/module/game-fsm.js\n\n\"use strict\";\n\nvar State = require('state.com');\n\nvar instance;\nvar model;\nvar playing;\n\nfunction on(message) {\n    return function (msgToEvaluate) {\n        return msgToEvaluate === message;\n    };\n}\n\nvar evaluating = false;\n\nexports = {\n    init: function init(target) {\n        // send log messages, warnings and errors to the console\n        State.console = console;\n\n        model = new State.StateMachine(\"root\");\n        var initial = new State.PseudoState(\"init-root\", model, State.PseudoStateKind.Initial);\n\n        // 当前这一把的状态\n\n        var bet = new State.State(\"下注\", model);\n        playing = new State.State(\"已开局\", model);\n        var settled = new State.State(\"结算\", model);\n\n        initial.to(bet);\n        bet.to(playing).when(on(\"deal\"));\n        playing.to(settled).when(on(\"end\"));\n        settled.to(bet).when(on(\"bet\"));\n\n        bet.entry(function () {\n            target.onBetState(true);\n        });\n        bet.exit(function () {\n            target.onBetState(false);\n        });\n\n        settled.entry(function () {\n            target.onEndState(true);\n        });\n        settled.exit(function () {\n            target.onEndState(false);\n        });\n\n        // 开局后的子状态\n\n        var initialP = new State.PseudoState(\"init 已开局\", playing, State.PseudoStateKind.Initial);\n        var deal = new State.State(\"发牌\", playing);\n        //var postDeal = new State.State(\"等待\", playing);    // 询问玩家是否买保险，双倍、分牌等\n        var playersTurn = new State.State(\"玩家决策\", playing);\n        var dealersTurn = new State.State(\"庄家决策\", playing);\n\n        initialP.to(deal);\n        deal.to(playersTurn).when(on(\"dealed\"));\n        playersTurn.to(dealersTurn).when(on(\"player acted\"));\n\n        deal.entry(function () {\n            target.onEnterDealState();\n        });\n        playersTurn.entry(function () {\n            target.onPlayersTurnState(true);\n        });\n        playersTurn.exit(function () {\n            target.onPlayersTurnState(false);\n        });\n        dealersTurn.entry(function () {\n            target.onEnterDealersTurnState();\n        });\n\n        // create a State machine instance\n        instance = new State.StateMachineInstance(\"fsm\");\n        State.initialise(model, instance);\n    },\n\n    toDeal: function toDeal() {\n        this._evaluate('deal');\n    },\n    toBet: function toBet() {\n        this._evaluate('bet');\n    },\n    onDealed: function onDealed() {\n        this._evaluate('dealed');\n    },\n    onPlayerActed: function onPlayerActed() {\n        this._evaluate('player acted');\n    },\n    onDealerActed: function onDealerActed() {\n        this._evaluate('end');\n    },\n\n    _evaluate: function _evaluate(message) {\n        if (evaluating) {\n            // can not call fsm's evaluate recursively\n            setTimeout(function () {\n                State.evaluate(model, instance, message);\n            }, 1);\n            return;\n        }\n        evaluating = true;\n        State.evaluate(model, instance, message);\n        evaluating = false;\n    },\n\n    _getInstance: function _getInstance() {\n        return instance;\n    },\n\n    _getModel: function _getModel() {\n        return model;\n    }\n};\n\nmodule.exports = exports;\n\ncc._RFpop();\n},{\"state.com\":\"state.com\"}],\"state.com\":[function(require,module,exports){\ncc._RFpush(module, '71d9293mx9CFryhJvRw85ZS', 'state.com');\n// scripts/lib/state.com.js\n\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\n\"use strict\";\n\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Behavior encapsulates multiple Action callbacks that can be invoked by a single call.\n     * @class Behavior\n     */\n    var Behavior = (function () {\n        /**\n         * Creates a new instance of the Behavior class.\n         * @param {Behavior} behavior The copy constructor; omit this optional parameter for a simple constructor.\n         */\n        function Behavior(behavior) {\n            this.actions = [];\n            if (behavior) {\n                this.push(behavior); // NOTE: this ensures a copy of the array is made\n            }\n        }\n        /**\n         * Adds an Action or set of Actions callbacks in a Behavior instance to this behavior instance.\n         * @method push\n         * @param {Behavior} behavior The Action or set of Actions callbacks to add to this behavior instance.\n         * @returns {Behavior} Returns this behavior instance (for use in fluent style development).\n         */\n        Behavior.prototype.push = function (behavior) {\n            Array.prototype.push.apply(this.actions, behavior instanceof Behavior ? behavior.actions : arguments);\n            return this;\n        };\n        /**\n         * Tests the Behavior instance to see if any actions have been defined.\n         * @method hasActions\n         * @returns {boolean} True if there are actions defined within this Behavior instance.\n         */\n        Behavior.prototype.hasActions = function () {\n            return this.actions.length !== 0;\n        };\n        /**\n         * Invokes all the action callbacks in this Behavior instance.\n         * @method invoke\n         * @param {any} message The message that triggered the transition.\n         * @param {IActiveStateConfiguration} instance The state machine instance.\n         * @param {boolean} history Internal use only\n         */\n        Behavior.prototype.invoke = function (message, instance, history) {\n            if (history === void 0) {\n                history = false;\n            }\n            this.actions.forEach(function (action) {\n                return action(message, instance, history);\n            });\n        };\n        return Behavior;\n    })();\n    StateJS.Behavior = Behavior;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An enumeration of static constants that dictates the precise behaviour of pseudo states.\n     *\n     * Use these constants as the `kind` parameter when creating new `PseudoState` instances.\n     * @class PseudoStateKind\n     */\n    (function (PseudoStateKind) {\n        /**\n         * Used for pseudo states that are always the staring point when entering their parent region.\n         * @member {PseudoStateKind} Initial\n         */\n        PseudoStateKind[PseudoStateKind[\"Initial\"] = 0] = \"Initial\";\n        /**\n         * Used for pseudo states that are the the starting point when entering their parent region for the first time; subsequent entries will start at the last known state.\n         * @member {PseudoStateKind} ShallowHistory\n         */\n        PseudoStateKind[PseudoStateKind[\"ShallowHistory\"] = 1] = \"ShallowHistory\";\n        /**\n         * As per `ShallowHistory` but the history semantic cascades through all child regions irrespective of their initial pseudo state kind.\n         * @member {PseudoStateKind} DeepHistory\n         */\n        PseudoStateKind[PseudoStateKind[\"DeepHistory\"] = 2] = \"DeepHistory\";\n        /**\n         * Enables a dynamic conditional branches; within a compound transition.\n         * All outbound transition guards from a Choice are evaluated upon entering the PseudoState:\n         * if a single transition is found, it will be traversed;\n         * if many transitions are found, an arbitary one will be selected and traversed;\n         * if none evaluate true, and there is no 'else transition' defined, the machine is deemed illformed and an exception will be thrown.\n         * @member {PseudoStateKind} Choice\n         */\n        PseudoStateKind[PseudoStateKind[\"Choice\"] = 3] = \"Choice\";\n        /**\n         * Enables a static conditional branches; within a compound transition.\n         * All outbound transition guards from a Choice are evaluated upon entering the PseudoState:\n         * if a single transition is found, it will be traversed;\n         * if many or none evaluate true, and there is no 'else transition' defined, the machine is deemed illformed and an exception will be thrown.\n         * @member {PseudoStateKind} Junction\n         */\n        PseudoStateKind[PseudoStateKind[\"Junction\"] = 4] = \"Junction\";\n        /**\n         * Entering a terminate `PseudoState` implies that the execution of this state machine by means of its state object is terminated.\n         * @member {PseudoStateKind} Terminate\n         */\n        PseudoStateKind[PseudoStateKind[\"Terminate\"] = 5] = \"Terminate\";\n    })(StateJS.PseudoStateKind || (StateJS.PseudoStateKind = {}));\n    var PseudoStateKind = StateJS.PseudoStateKind;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An enumeration of static constants that dictates the precise behaviour of transitions.\n     *\n     * Use these constants as the `kind` parameter when creating new `Transition` instances.\n     * @class TransitionKind\n     */\n    (function (TransitionKind) {\n        /**\n         * The transition, if triggered, occurs without exiting or entering the source state.\n         * Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked.\n         * An internal transition can be taken even if the state machine is in one or more regions nested within this state.\n         * @member {TransitionKind} Internal\n         */\n        TransitionKind[TransitionKind[\"Internal\"] = 0] = \"Internal\";\n        /**\n         * The transition, if triggered, will not exit the composite (source) state, but will enter the non-active target vertex ancestry.\n         * @member {TransitionKind} Local\n         */\n        TransitionKind[TransitionKind[\"Local\"] = 1] = \"Local\";\n        /**\n         * The transition, if triggered, will exit the source vertex.\n         * @member {TransitionKind} External\n         */\n        TransitionKind[TransitionKind[\"External\"] = 2] = \"External\";\n    })(StateJS.TransitionKind || (StateJS.TransitionKind = {}));\n    var TransitionKind = StateJS.TransitionKind;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An abstract class used as the base for the Region and Vertex classes.\n     * An element is a node within the tree structure that represents a composite state machine model.\n     * @class Element\n     */\n    var Element = (function () {\n        /**\n         * Creates a new instance of the element class.\n         * @param {string} name The name of the element.\n         */\n        function Element(name, parent) {\n            this.name = name;\n            this.qualifiedName = parent ? parent.qualifiedName + Element.namespaceSeparator + name : name;\n        }\n        /**\n         * Returns a the element name as a fully qualified namespace.\n         * @method toString\n         * @returns {string}\n         */\n        Element.prototype.toString = function () {\n            return this.qualifiedName;\n        };\n        /**\n         * The symbol used to separate element names within a fully qualified name.\n         * Change this static member to create different styles of qualified name generated by the toString method.\n         * @member {string}\n         */\n        Element.namespaceSeparator = \".\";\n        return Element;\n    })();\n    StateJS.Element = Element;\n})(StateJS || (StateJS = {}));\nvar __extends = undefined && undefined.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An element within a state machine model that is a container of Vertices.\n     *\n     * Regions are implicitly inserted into composite state machines as a container for vertices.\n     * They only need to be explicitly defined if orthogonal states are required.\n     *\n     * Region extends the Element class and inherits its public interface.\n     * @class Region\n     * @augments Element\n     */\n    var Region = (function (_super) {\n        __extends(Region, _super);\n        /**\n         * Creates a new instance of the Region class.\n         * @param {string} name The name of the region.\n         * @param {State} state The parent state that this region will be a child of.\n         */\n        function Region(name, state) {\n            _super.call(this, name, state);\n            /**\n             * The set of vertices that are children of the region.\n             * @member {Array<Vertex>}\n             */\n            this.vertices = [];\n            this.state = state;\n            this.state.regions.push(this);\n            this.state.getRoot().clean = false;\n        }\n        /**\n         * Returns the root element within the state machine model.\n         * @method getRoot\n         * @returns {StateMachine} The root state machine element.\n         */\n        Region.prototype.getRoot = function () {\n            return this.state.getRoot();\n        };\n        /**\n         * Accepts an instance of a visitor and calls the visitRegion method on it.\n         * @method accept\n         * @param {Visitor<TArg1>} visitor The visitor instance.\n         * @param {TArg1} arg1 An optional argument to pass into the visitor.\n         * @param {any} arg2 An optional argument to pass into the visitor.\n         * @param {any} arg3 An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        Region.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitRegion(this, arg1, arg2, arg3);\n        };\n        /**\n         * The name given to regions that are are created automatically when a state is passed as a vertex's parent.\n         * Regions are automatically inserted into state machine models as the composite structure is built; they are named using this static member.\n         * Update this static member to use a different name for default regions.\n         * @member {string}\n         */\n        Region.defaultName = \"default\";\n        return Region;\n    })(StateJS.Element);\n    StateJS.Region = Region;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An abstract element within a state machine model that can be the source or target of a transition (states and pseudo states).\n     *\n     * Vertex extends the Element class and inherits its public interface.\n     * @class Vertex\n     * @augments Element\n     */\n    var Vertex = (function (_super) {\n        __extends(Vertex, _super);\n        /**\n         * Creates a new instance of the Vertex class.\n         * @param {string} name The name of the vertex.\n         * @param {Element} parent The parent region or state.\n         */\n        function Vertex(name, parent) {\n            _super.call(this, name, parent = parent instanceof StateJS.State ? parent.defaultRegion() : parent); // TODO: find a cleaner way to manage implicit conversion\n            /**\n             * The set of transitions from this vertex.\n             * @member {Array<Transition>}\n             */\n            this.outgoing = [];\n            this.region = parent; // NOTE: parent will be a Region due to the conditional logic in the super call above\n            if (this.region) {\n                this.region.vertices.push(this);\n                this.region.getRoot().clean = false;\n            }\n        }\n        /**\n         * Returns the root element within the state machine model.\n         * @method getRoot\n         * @returns {StateMachine} The root state machine element.\n         */\n        Vertex.prototype.getRoot = function () {\n            return this.region.getRoot(); // NOTE: need to keep this dynamic as a state machine may be embedded within another\n        };\n        /**\n         * Creates a new transition from this vertex.\n         * Newly created transitions are completion transitions; they will be evaluated after a vertex has been entered if it is deemed to be complete.\n         * Transitions can be converted to be event triggered by adding a guard condition via the transitions `where` method.\n         * @method to\n         * @param {Vertex} target The destination of the transition; omit for internal transitions.\n         * @param {TransitionKind} kind The kind the transition; use this to set Local or External (the default if omitted) transition semantics.\n         * @returns {Transition} The new transition object.\n         */\n        Vertex.prototype.to = function (target, kind) {\n            if (kind === void 0) {\n                kind = StateJS.TransitionKind.External;\n            }\n            return new StateJS.Transition(this, target, kind);\n        };\n        /**\n         * Accepts an instance of a visitor.\n         * @method accept\n         * @param {Visitor<TArg>} visitor The visitor instance.\n         * @param {TArg} arg An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        Vertex.prototype.accept = function (visitor, arg1, arg2, arg3) {};\n        return Vertex;\n    })(StateJS.Element);\n    StateJS.Vertex = Vertex;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An element within a state machine model that represents an transitory Vertex within the state machine model.\n     *\n     * Pseudo states are required in all state machine models; at the very least, an `Initial` pseudo state is the default stating state when the parent region is entered.\n     * Other types of pseudo state are available; typically for defining history semantics or to facilitate more complex transitions.\n     * A `Terminate` pseudo state kind is also available to immediately terminate processing within the entire state machine instance.\n     *\n     * PseudoState extends the Vertex class and inherits its public interface.\n     * @class PseudoState\n     * @augments Vertex\n     */\n    var PseudoState = (function (_super) {\n        __extends(PseudoState, _super);\n        /**\n         * Creates a new instance of the PseudoState class.\n         * @param {string} name The name of the pseudo state.\n         * @param {Element} parent The parent element that this pseudo state will be a child of.\n         * @param {PseudoStateKind} kind Determines the behaviour of the PseudoState.\n         */\n        function PseudoState(name, parent, kind) {\n            if (kind === void 0) {\n                kind = StateJS.PseudoStateKind.Initial;\n            }\n            _super.call(this, name, parent);\n            this.kind = kind;\n        }\n        /**\n         * Tests a pseudo state to determine if it is a history pseudo state.\n         * History pseudo states are of kind: Initial, ShallowHisory, or DeepHistory.\n         * @method isHistory\n         * @returns {boolean} True if the pseudo state is a history pseudo state.\n         */\n        PseudoState.prototype.isHistory = function () {\n            return this.kind === StateJS.PseudoStateKind.DeepHistory || this.kind === StateJS.PseudoStateKind.ShallowHistory;\n        };\n        /**\n         * Tests a pseudo state to determine if it is an initial pseudo state.\n         * Initial pseudo states are of kind: Initial, ShallowHisory, or DeepHistory.\n         * @method isInitial\n         * @returns {boolean} True if the pseudo state is an initial pseudo state.\n         */\n        PseudoState.prototype.isInitial = function () {\n            return this.kind === StateJS.PseudoStateKind.Initial || this.isHistory();\n        };\n        /**\n         * Accepts an instance of a visitor and calls the visitPseudoState method on it.\n         * @method accept\n         * @param {Visitor<TArg1>} visitor The visitor instance.\n         * @param {TArg1} arg1 An optional argument to pass into the visitor.\n         * @param {any} arg2 An optional argument to pass into the visitor.\n         * @param {any} arg3 An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        PseudoState.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitPseudoState(this, arg1, arg2, arg3);\n        };\n        return PseudoState;\n    })(StateJS.Vertex);\n    StateJS.PseudoState = PseudoState;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An element within a state machine model that represents an invariant condition within the life of the state machine instance.\n     *\n     * States are one of the fundamental building blocks of the state machine model.\n     * Behaviour can be defined for both state entry and state exit.\n     *\n     * State extends the Vertex class and inherits its public interface.\n     * @class State\n     * @augments Vertex\n     */\n    var State = (function (_super) {\n        __extends(State, _super);\n        /**\n         * Creates a new instance of the State class.\n         * @param {string} name The name of the state.\n         * @param {Element} parent The parent state that owns the state.\n         */\n        function State(name, parent) {\n            _super.call(this, name, parent);\n            // user defined behaviour (via exit method) to execute when exiting a state.\n            this.exitBehavior = new StateJS.Behavior();\n            // user defined behaviour (via entry method) to execute when entering a state.\n            this.entryBehavior = new StateJS.Behavior();\n            /**\n             * The set of regions under this state.\n             * @member {Array<Region>}\n             */\n            this.regions = [];\n        }\n        /**\n         * Returns the default region for the state.\n         * Note, this will create the default region if it does not already exist.\n         * @method defaultRegion\n         * @returns {Region} The default region.\n         */\n        State.prototype.defaultRegion = function () {\n            return this.regions.reduce(function (result, region) {\n                return region.name === StateJS.Region.defaultName ? region : result;\n            }, undefined) || new StateJS.Region(StateJS.Region.defaultName, this);\n        };\n        /**\n         * Tests the state to see if it is a final state;\n         * a final state is one that has no outbound transitions.\n         * @method isFinal\n         * @returns {boolean} True if the state is a final state.\n         */\n        State.prototype.isFinal = function () {\n            return this.outgoing.length === 0;\n        };\n        /**\n         * Tests the state to see if it is a simple state;\n         * a simple state is one that has no child regions.\n         * @method isSimple\n         * @returns {boolean} True if the state is a simple state.\n         */\n        State.prototype.isSimple = function () {\n            return this.regions.length === 0;\n        };\n        /**\n         * Tests the state to see if it is a composite state;\n         * a composite state is one that has one or more child regions.\n         * @method isComposite\n         * @returns {boolean} True if the state is a composite state.\n         */\n        State.prototype.isComposite = function () {\n            return this.regions.length > 0;\n        };\n        /**\n         * Tests the state to see if it is an orthogonal state;\n         * an orthogonal state is one that has two or more child regions.\n         * @method isOrthogonal\n         * @returns {boolean} True if the state is an orthogonal state.\n         */\n        State.prototype.isOrthogonal = function () {\n            return this.regions.length > 1;\n        };\n        /**\n         * Adds behaviour to a state that is executed each time the state is exited.\n         * @method exit\n         * @param {Action} exitAction The action to add to the state's exit behaviour.\n         * @returns {State} Returns the state to allow a fluent style API.\n         */\n        State.prototype.exit = function (exitAction) {\n            this.exitBehavior.push(exitAction);\n            this.getRoot().clean = false;\n            return this;\n        };\n        /**\n         * Adds behaviour to a state that is executed each time the state is entered.\n         * @method entry\n         * @param {Action} entryAction The action to add to the state's entry behaviour.\n         * @returns {State} Returns the state to allow a fluent style API.\n         */\n        State.prototype.entry = function (entryAction) {\n            this.entryBehavior.push(entryAction);\n            this.getRoot().clean = false;\n            return this;\n        };\n        /**\n         * Accepts an instance of a visitor and calls the visitState method on it.\n         * @method accept\n         * @param {Visitor<TArg1>} visitor The visitor instance.\n         * @param {TArg1} arg1 An optional argument to pass into the visitor.\n         * @param {any} arg2 An optional argument to pass into the visitor.\n         * @param {any} arg3 An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        State.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitState(this, arg1, arg2, arg3);\n        };\n        return State;\n    })(StateJS.Vertex);\n    StateJS.State = State;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An element within a state machine model that represents completion of the life of the containing Region within the state machine instance.\n     *\n     * A final state cannot have outbound transitions.\n     *\n     * FinalState extends the State class and inherits its public interface.\n     * @class FinalState\n     * @augments State\n     */\n    var FinalState = (function (_super) {\n        __extends(FinalState, _super);\n        /**\n         * Creates a new instance of the FinalState class.\n         * @param {string} name The name of the final state.\n         * @param {Element} parent The parent element that owns the final state.\n         */\n        function FinalState(name, parent) {\n            _super.call(this, name, parent);\n        }\n        /**\n         * Accepts an instance of a visitor and calls the visitFinalState method on it.\n         * @method accept\n         * @param {Visitor<TArg>} visitor The visitor instance.\n         * @param {TArg} arg An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        FinalState.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitFinalState(this, arg1, arg2, arg3);\n        };\n        return FinalState;\n    })(StateJS.State);\n    StateJS.FinalState = FinalState;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * An element within a state machine model that represents the root of the state machine model.\n     *\n     * StateMachine extends the State class and inherits its public interface.\n     * @class StateMachine\n     * @augments State\n     */\n    var StateMachine = (function (_super) {\n        __extends(StateMachine, _super);\n        /**\n         * Creates a new instance of the StateMachine class.\n         * @param {string} name The name of the state machine.\n         */\n        function StateMachine(name) {\n            _super.call(this, name, undefined);\n            // flag used to indicate that the state machine model has has structural changes and therefore requires initialising.\n            this.clean = false;\n        }\n        /**\n         * Returns the root element within the state machine model.\n         * Note that if this state machine is embeded within another state machine, the ultimate root element will be returned.\n         * @method getRoot\n         * @returns {StateMachine} The root state machine element.\n         */\n        StateMachine.prototype.getRoot = function () {\n            return this.region ? this.region.getRoot() : this;\n        };\n        /**\n         * Accepts an instance of a visitor and calls the visitStateMachine method on it.\n         * @method accept\n         * @param {Visitor<TArg1>} visitor The visitor instance.\n         * @param {TArg1} arg1 An optional argument to pass into the visitor.\n         * @param {any} arg2 An optional argument to pass into the visitor.\n         * @param {any} arg3 An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        StateMachine.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitStateMachine(this, arg1, arg2, arg3);\n        };\n        return StateMachine;\n    })(StateJS.State);\n    StateJS.StateMachine = StateMachine;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * A transition between vertices (states or pseudo states) that may be traversed in response to a message.\n     *\n     * Transitions come in a variety of types:\n     * internal transitions respond to messages but do not cause a state transition, they only have behaviour;\n     * local transitions are contained within a single region therefore the source vertex is exited, the transition traversed, and the target state entered;\n     * external transitions are more complex in nature as they cross region boundaries, all elements up to but not not including the common ancestor are exited and entered.\n     *\n     * Entering a composite state will cause the entry of the child regions within the composite state; this in turn may trigger more transitions.\n     * @class Transition\n     */\n    var Transition = (function () {\n        /**\n         * Creates a new instance of the Transition class.\n         * @param {Vertex} source The source of the transition.\n         * @param {Vertex} source The target of the transition; this is an optional parameter, omitting it will create an Internal transition.\n         * @param {TransitionKind} kind The kind the transition; use this to set Local or External (the default if omitted) transition semantics.\n         */\n        function Transition(source, target, kind) {\n            var _this = this;\n            if (kind === void 0) {\n                kind = StateJS.TransitionKind.External;\n            }\n            // user defined behaviour (via effect) executed when traversing this transition.\n            this.transitionBehavior = new StateJS.Behavior();\n            // the collected actions to perform when traversing the transition (includes exiting states, traversal, and state entry)\n            this.onTraverse = new StateJS.Behavior();\n            this.source = source;\n            this.target = target;\n            this.kind = target ? kind : StateJS.TransitionKind.Internal;\n            this.guard = source instanceof StateJS.PseudoState ? Transition.TrueGuard : function (message) {\n                return message === _this.source;\n            };\n            this.source.outgoing.push(this);\n            this.source.getRoot().clean = false;\n        }\n        /**\n         * Turns a transition into an else transition.\n         *\n         * Else transitions can be used at `Junction` or `Choice` pseudo states if no other transition guards evaluate true, an Else transition if present will be traversed.\n         * @method else\n         * @returns {Transition} Returns the transition object to enable the fluent API.\n         */\n        Transition.prototype[\"else\"] = function () {\n            this.guard = Transition.FalseGuard;\n            return this;\n        };\n        /**\n         * Defines the guard condition for the transition.\n         * @method when\n         * @param {Guard} guard The guard condition that must evaluate true for the transition to be traversed.\n         * @returns {Transition} Returns the transition object to enable the fluent API.\n         */\n        Transition.prototype.when = function (guard) {\n            this.guard = guard;\n            return this;\n        };\n        /**\n         * Add behaviour to a transition.\n         * @method effect\n         * @param {Action} transitionAction The action to add to the transitions traversal behaviour.\n         * @returns {Transition} Returns the transition object to enable the fluent API.\n         */\n        Transition.prototype.effect = function (transitionAction) {\n            this.transitionBehavior.push(transitionAction);\n            this.source.getRoot().clean = false;\n            return this;\n        };\n        /**\n         * Accepts an instance of a visitor and calls the visitTransition method on it.\n         * @method accept\n         * @param {Visitor<TArg1>} visitor The visitor instance.\n         * @param {TArg1} arg1 An optional argument to pass into the visitor.\n         * @param {any} arg2 An optional argument to pass into the visitor.\n         * @param {any} arg3 An optional argument to pass into the visitor.\n         * @returns {any} Any value can be returned by the visitor.\n         */\n        Transition.prototype.accept = function (visitor, arg1, arg2, arg3) {\n            return visitor.visitTransition(this, arg1, arg2, arg3);\n        };\n        /**\n         * Returns a the transition name.\n         * @method toString\n         * @returns {string}\n         */\n        Transition.prototype.toString = function () {\n            return \"[\" + (this.target ? this.source + \" -> \" + this.target : this.source) + \"]\";\n        };\n        // the default guard condition for pseudo states\n        Transition.TrueGuard = function () {\n            return true;\n        };\n        // used as the guard condition for else tranitions\n        Transition.FalseGuard = function () {\n            return false;\n        };\n        return Transition;\n    })();\n    StateJS.Transition = Transition;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Implementation of a visitor pattern.\n     * @class Visitor\n     */\n    var Visitor = (function () {\n        function Visitor() {}\n        /**\n         * Visits an element within a state machine model.\n         * @method visitElement\n         * @param {Element} element the element being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitElement = function (element, arg1, arg2, arg3) {};\n        /**\n         * Visits a region within a state machine model.\n         * @method visitRegion\n         * @param {Region} region The region being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitRegion = function (region, arg1, arg2, arg3) {\n            var _this = this;\n            var result = this.visitElement(region, arg1, arg2, arg3);\n            region.vertices.forEach(function (vertex) {\n                vertex.accept(_this, arg1, arg2, arg3);\n            });\n            return result;\n        };\n        /**\n         * Visits a vertex within a state machine model.\n         * @method visitVertex\n         * @param {Vertex} vertex The vertex being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitVertex = function (vertex, arg1, arg2, arg3) {\n            var _this = this;\n            var result = this.visitElement(vertex, arg1, arg2, arg3);\n            vertex.outgoing.forEach(function (transition) {\n                transition.accept(_this, arg1, arg2, arg3);\n            });\n            return result;\n        };\n        /**\n         * Visits a pseudo state within a state machine model.\n         * @method visitPseudoState\n         * @param {PseudoState} pseudoState The pseudo state being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitPseudoState = function (pseudoState, arg1, arg2, arg3) {\n            return this.visitVertex(pseudoState, arg1, arg2, arg3);\n        };\n        /**\n         * Visits a state within a state machine model.\n         * @method visitState\n         * @param {State} state The state being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitState = function (state, arg1, arg2, arg3) {\n            var _this = this;\n            var result = this.visitVertex(state, arg1, arg2, arg3);\n            state.regions.forEach(function (region) {\n                region.accept(_this, arg1, arg2, arg3);\n            });\n            return result;\n        };\n        /**\n         * Visits a final state within a state machine model.\n         * @method visitFinal\n         * @param {FinalState} finalState The final state being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitFinalState = function (finalState, arg1, arg2, arg3) {\n            return this.visitState(finalState, arg1, arg2, arg3);\n        };\n        /**\n         * Visits a state machine within a state machine model.\n         * @method visitVertex\n         * @param {StateMachine} state machine The state machine being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitStateMachine = function (stateMachine, arg1, arg2, arg3) {\n            return this.visitState(stateMachine, arg1, arg2, arg3);\n        };\n        /**\n         * Visits a transition within a state machine model.\n         * @method visitTransition\n         * @param {Transition} transition The transition being visited.\n         * @param {TArg1} arg1 An optional parameter passed into the accept method.\n         * @param {any} arg2 An optional parameter passed into the accept method.\n         * @param {any} arg3 An optional parameter passed into the accept method.\n         * @returns {any} Any value may be returned when visiting an element.\n         */\n        Visitor.prototype.visitTransition = function (transition, arg1, arg2, arg3) {};\n        return Visitor;\n    })();\n    StateJS.Visitor = Visitor;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Default working implementation of a state machine instance class.\n     *\n     * Implements the `IActiveStateConfiguration` interface.\n     * It is possible to create other custom instance classes to manage state machine state in other ways (e.g. as serialisable JSON); just implement the same members and methods as this class.\n     * @class StateMachineInstance\n     * @implements IActiveStateConfiguration\n     */\n    var StateMachineInstance = (function () {\n        /**\n         * Creates a new instance of the state machine instance class.\n         * @param {string} name The optional name of the state machine instance.\n         */\n        function StateMachineInstance(name) {\n            if (name === void 0) {\n                name = \"unnamed\";\n            }\n            this.last = {};\n            /**\n             * Indicates that the state manchine instance reached was terminated by reaching a Terminate pseudo state.\n             * @member isTerminated\n             */\n            this.isTerminated = false;\n            this.name = name;\n        }\n        // Updates the last known state for a given region.\n        StateMachineInstance.prototype.setCurrent = function (region, state) {\n            this.last[region.qualifiedName] = state;\n        };\n        // Returns the last known state for a given region.\n        StateMachineInstance.prototype.getCurrent = function (region) {\n            return this.last[region.qualifiedName];\n        };\n        /**\n         * Returns the name of the state machine instance.\n         * @method toString\n         * @returns {string} The name of the state machine instance.\n         */\n        StateMachineInstance.prototype.toString = function () {\n            return this.name;\n        };\n        return StateMachineInstance;\n    })();\n    StateJS.StateMachineInstance = StateMachineInstance;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Sets a method to select an integer random number less than the max value passed as a parameter.\n     *\n     * This is only useful when a custom random number generator is required; the default implementation is fine in most circumstances.\n     * @function setRandom\n     * @param {function} generator A function that takes a max value and returns a random number between 0 and max - 1.\n     * @returns A random number between 0 and max - 1\n     */\n    function setRandom(generator) {\n        random = generator;\n    }\n    StateJS.setRandom = setRandom;\n    /**\n     * Returns the current method used to select an integer random number less than the max value passed as a parameter.\n     *\n     * This is only useful when a custom random number generator is required; the default implementation is fine in most circumstances.\n     * @function getRandom\n     * @returns {function} The function that takes a max value and returns a random number between 0 and max - 1.\n     */\n    function getRandom() {\n        return random;\n    }\n    StateJS.getRandom = getRandom;\n    // the default method used to produce a random number; defaulting to simplified implementation seen in Mozilla Math.random() page; may be overriden for testing\n    var random = function random(max) {\n        return Math.floor(Math.random() * max);\n    };\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Determines if an element is currently active; that it has been entered but not yet exited.\n     * @function isActive\n     * @param {Element} element The state to test.\n     * @param {IActiveStateConfiguration} instance The instance of the state machine model.\n     * @returns {boolean} True if the element is active.\n     */\n    function isActive(_x, _x2) {\n        var _again = true;\n\n        _function: while (_again) {\n            var element = _x,\n                stateMachineInstance = _x2;\n            _again = false;\n\n            if (element instanceof StateJS.Region) {\n                _x = element.state;\n                _x2 = stateMachineInstance;\n                _again = true;\n                continue _function;\n            } else if (element instanceof StateJS.State) {\n                return element.region ? isActive(element.region, stateMachineInstance) && stateMachineInstance.getCurrent(element.region) === element : true;\n            }\n        }\n    }\n    StateJS.isActive = isActive;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Tests an element within a state machine instance to see if its lifecycle is complete.\n     * @function isComplete\n     * @param {Element} element The element to test.\n     * @param {IActiveStateConfiguration} instance The instance of the state machine model to test for completeness.\n     * @returns {boolean} True if the element is complete.\n     */\n    function isComplete(element, instance) {\n        if (element instanceof StateJS.Region) {\n            return instance.getCurrent(element).isFinal();\n        } else if (element instanceof StateJS.State) {\n            return element.regions.every(function (region) {\n                return isComplete(region, instance);\n            });\n        }\n        return true;\n    }\n    StateJS.isComplete = isComplete;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Initialises a state machine and/or state machine model.\n     *\n     * Passing just the state machine model will initialise the model, passing the model and instance will initialse the instance and if necessary, the model.\n     * @function initialise\n     * @param {StateMachine} stateMachineModel The state machine model. If autoInitialiseModel is true (or no instance is specified) and the model has changed, the model will be initialised.\n     * @param {IActiveStateConfiguration} stateMachineInstance The optional state machine instance to initialise.\n     * @param {boolean} autoInitialiseModel Defaulting to true, this will cause the model to be initialised prior to initialising the instance if the model has changed.\n     */\n    function initialise(stateMachineModel, stateMachineInstance, autoInitialiseModel) {\n        if (autoInitialiseModel === void 0) {\n            autoInitialiseModel = true;\n        }\n        if (stateMachineInstance) {\n            // initialise the state machine model if necessary\n            if (autoInitialiseModel && stateMachineModel.clean === false) {\n                initialise(stateMachineModel);\n            }\n            // log as required\n            StateJS.console.log(\"initialise \" + stateMachineInstance);\n            // enter the state machine instance for the first time\n            stateMachineModel.onInitialise.invoke(undefined, stateMachineInstance);\n        } else {\n            // log as required\n            StateJS.console.log(\"initialise \" + stateMachineModel.name);\n            // initialise the state machine model\n            stateMachineModel.accept(new InitialiseElements(), false);\n            stateMachineModel.clean = true;\n        }\n    }\n    StateJS.initialise = initialise;\n    /**\n     * Passes a message to a state machine for evaluation; messages trigger state transitions.\n     * @function evaluate\n     * @param {StateMachine} stateMachineModel The state machine model. If autoInitialiseModel is true (or no instance is specified) and the model has changed, the model will be initialised.\n     * @param {IActiveStateConfiguration} stateMachineInstance The instance of the state machine model to evaluate the message against.\n     * @param {boolean} autoInitialiseModel Defaulting to true, this will cause the model to be initialised prior to initialising the instance if the model has changed.\n     * @returns {boolean} True if the message triggered a state transition.\n     */\n    function evaluate(stateMachineModel, stateMachineInstance, message, autoInitialiseModel) {\n        if (autoInitialiseModel === void 0) {\n            autoInitialiseModel = true;\n        }\n        // log as required\n        StateJS.console.log(stateMachineInstance + \" evaluate \" + message);\n        // initialise the state machine model if necessary\n        if (autoInitialiseModel && stateMachineModel.clean === false) {\n            initialise(stateMachineModel);\n        }\n        // terminated state machine instances will not evaluate messages\n        if (stateMachineInstance.isTerminated) {\n            return false;\n        }\n        return evaluateState(stateMachineModel, stateMachineInstance, message);\n    }\n    StateJS.evaluate = evaluate;\n    // evaluates messages against a state, executing transitions as appropriate\n    function evaluateState(state, stateMachineInstance, message) {\n        var result = false;\n        // delegate to child regions first\n        state.regions.every(function (region) {\n            if (evaluateState(stateMachineInstance.getCurrent(region), stateMachineInstance, message)) {\n                result = true;\n                return StateJS.isActive(state, stateMachineInstance); // NOTE: this just controls the every loop; also isActive is a litte costly so using sparingly\n            }\n            return true; // NOTE: this just controls the every loop\n        });\n        // if a transition occured in a child region, check for completions\n        if (result) {\n            if (message !== state && StateJS.isComplete(state, stateMachineInstance)) {\n                evaluateState(state, stateMachineInstance, state);\n            }\n        } else {\n            // otherwise look for a transition from this state\n            var transitions = state.outgoing.filter(function (transition) {\n                return transition.guard(message, stateMachineInstance);\n            });\n            if (transitions.length === 1) {\n                // execute if a single transition was found\n                result = traverse(transitions[0], stateMachineInstance, message);\n            } else if (transitions.length > 1) {\n                // error if multiple transitions evaluated true\n                StateJS.console.error(state + \": multiple outbound transitions evaluated true for message \" + message);\n            }\n        }\n        return result;\n    }\n    // traverses a transition\n    function traverse(transition, instance, message) {\n        var onTraverse = new StateJS.Behavior(transition.onTraverse),\n            target = transition.target;\n        // process static conditional branches\n        while (target && target instanceof StateJS.PseudoState && target.kind === StateJS.PseudoStateKind.Junction) {\n            target = (transition = selectTransition(target, instance, message)).target;\n            // concatenate behaviour before and after junctions\n            onTraverse.push(transition.onTraverse);\n        }\n        // execute the transition behaviour\n        onTraverse.invoke(message, instance);\n        // process dynamic conditional branches\n        if (target && target instanceof StateJS.PseudoState && target.kind === StateJS.PseudoStateKind.Choice) {\n            traverse(selectTransition(target, instance, message), instance, message);\n        } else if (target && target instanceof StateJS.State && StateJS.isComplete(target, instance)) {\n            // test for completion transitions\n            evaluateState(target, instance, target);\n        }\n        return true;\n    }\n    // select next leg of composite transitions after choice and junction pseudo states\n    function selectTransition(pseudoState, stateMachineInstance, message) {\n        var results = pseudoState.outgoing.filter(function (transition) {\n            return transition.guard(message, stateMachineInstance);\n        });\n        if (pseudoState.kind === StateJS.PseudoStateKind.Choice) {\n            return results.length !== 0 ? results[StateJS.getRandom()(results.length)] : findElse(pseudoState);\n        } else {\n            if (results.length > 1) {\n                StateJS.console.error(\"Multiple outbound transition guards returned true at \" + this + \" for \" + message);\n            } else {\n                return results[0] || findElse(pseudoState);\n            }\n        }\n    }\n    // look for else transitins from a junction or choice\n    function findElse(pseudoState) {\n        return pseudoState.outgoing.filter(function (transition) {\n            return transition.guard === StateJS.Transition.FalseGuard;\n        })[0];\n    }\n    // functions to retreive specif element behavior\n    function leave(elementBehavior) {\n        return elementBehavior[0] || (elementBehavior[0] = new StateJS.Behavior());\n    }\n    function beginEnter(elementBehavior) {\n        return elementBehavior[1] || (elementBehavior[1] = new StateJS.Behavior());\n    }\n    function endEnter(elementBehavior) {\n        return elementBehavior[2] || (elementBehavior[2] = new StateJS.Behavior());\n    }\n    function enter(elementBehavior) {\n        return new StateJS.Behavior(beginEnter(elementBehavior)).push(endEnter(elementBehavior));\n    }\n    // get all the vertex ancestors of a vertex (including the vertex itself)\n    function ancestors(vertex) {\n        return (vertex.region ? ancestors(vertex.region.state) : []).concat(vertex);\n    }\n    // determine the type of transition and use the appropriate initiliasition method\n    var InitialiseTransitions = (function (_super) {\n        __extends(InitialiseTransitions, _super);\n        function InitialiseTransitions() {\n            _super.apply(this, arguments);\n        }\n        InitialiseTransitions.prototype.visitTransition = function (transition, behaviour) {\n            if (transition.kind === StateJS.TransitionKind.Internal) {\n                transition.onTraverse.push(transition.transitionBehavior);\n            } else if (transition.kind === StateJS.TransitionKind.Local) {\n                this.visitLocalTransition(transition, behaviour);\n            } else {\n                this.visitExternalTransition(transition, behaviour);\n            }\n        };\n        // initialise internal transitions: these do not leave the source state\n        InitialiseTransitions.prototype.visitLocalTransition = function (transition, behaviour) {\n            var _this = this;\n            transition.onTraverse.push(function (message, instance) {\n                var targetAncestors = ancestors(transition.target),\n                    i = 0;\n                // find the first inactive element in the target ancestry\n                while (StateJS.isActive(targetAncestors[i], instance)) {\n                    ++i;\n                }\n                // exit the active sibling\n                leave(behaviour(instance.getCurrent(targetAncestors[i].region))).invoke(message, instance);\n                // perform the transition action;\n                transition.transitionBehavior.invoke(message, instance);\n                // enter the target ancestry\n                while (i < targetAncestors.length) {\n                    _this.cascadeElementEntry(transition, behaviour, targetAncestors[i++], targetAncestors[i], function (behavior) {\n                        behavior.invoke(message, instance);\n                    });\n                }\n                // trigger cascade\n                endEnter(behaviour(transition.target)).invoke(message, instance);\n            });\n        };\n        // initialise external transitions: these are abritarily complex\n        InitialiseTransitions.prototype.visitExternalTransition = function (transition, behaviour) {\n            var sourceAncestors = ancestors(transition.source),\n                targetAncestors = ancestors(transition.target),\n                i = Math.min(sourceAncestors.length, targetAncestors.length) - 1;\n            // find the index of the first uncommon ancestor (or for external transitions, the source)\n            while (sourceAncestors[i - 1] !== targetAncestors[i - 1]) {\n                --i;\n            }\n            // leave source ancestry as required\n            transition.onTraverse.push(leave(behaviour(sourceAncestors[i])));\n            // perform the transition effect\n            transition.onTraverse.push(transition.transitionBehavior);\n            // enter the target ancestry\n            while (i < targetAncestors.length) {\n                this.cascadeElementEntry(transition, behaviour, targetAncestors[i++], targetAncestors[i], function (behavior) {\n                    return transition.onTraverse.push(behavior);\n                });\n            }\n            // trigger cascade\n            transition.onTraverse.push(endEnter(behaviour(transition.target)));\n        };\n        InitialiseTransitions.prototype.cascadeElementEntry = function (transition, behaviour, element, next, task) {\n            task(beginEnter(behaviour(element)));\n            if (next && element instanceof StateJS.State) {\n                element.regions.forEach(function (region) {\n                    task(beginEnter(behaviour(region)));\n                    if (region !== next.region) {\n                        task(endEnter(behaviour(region)));\n                    }\n                });\n            }\n        };\n        return InitialiseTransitions;\n    })(StateJS.Visitor);\n    // bootstraps all the elements within a state machine model\n    var InitialiseElements = (function (_super) {\n        __extends(InitialiseElements, _super);\n        function InitialiseElements() {\n            _super.apply(this, arguments);\n            this.behaviours = {};\n        }\n        InitialiseElements.prototype.behaviour = function (element) {\n            return this.behaviours[element.qualifiedName] || (this.behaviours[element.qualifiedName] = []);\n        };\n        InitialiseElements.prototype.visitElement = function (element, deepHistoryAbove) {\n            if (StateJS.console !== defaultConsole) {\n                leave(this.behaviour(element)).push(function (message, instance) {\n                    return StateJS.console.log(instance + \" leave \" + element);\n                });\n                beginEnter(this.behaviour(element)).push(function (message, instance) {\n                    return StateJS.console.log(instance + \" enter \" + element);\n                });\n            }\n        };\n        InitialiseElements.prototype.visitRegion = function (region, deepHistoryAbove) {\n            var _this = this;\n            var regionInitial = region.vertices.reduce(function (result, vertex) {\n                return vertex instanceof StateJS.PseudoState && vertex.isInitial() ? vertex : result;\n            }, undefined);\n            region.vertices.forEach(function (vertex) {\n                vertex.accept(_this, deepHistoryAbove || regionInitial && regionInitial.kind === StateJS.PseudoStateKind.DeepHistory);\n            });\n            // leave the curent active child state when exiting the region\n            leave(this.behaviour(region)).push(function (message, stateMachineInstance) {\n                return leave(_this.behaviour(stateMachineInstance.getCurrent(region))).invoke(message, stateMachineInstance);\n            });\n            // enter the appropriate child vertex when entering the region\n            if (deepHistoryAbove || !regionInitial || regionInitial.isHistory()) {\n                endEnter(this.behaviour(region)).push(function (message, stateMachineInstance, history) {\n                    enter(_this.behaviour(history || regionInitial.isHistory() ? stateMachineInstance.getCurrent(region) || regionInitial : regionInitial)).invoke(message, stateMachineInstance, history || regionInitial.kind === StateJS.PseudoStateKind.DeepHistory);\n                });\n            } else {\n                endEnter(this.behaviour(region)).push(enter(this.behaviour(regionInitial)));\n            }\n            this.visitElement(region, deepHistoryAbove);\n        };\n        InitialiseElements.prototype.visitPseudoState = function (pseudoState, deepHistoryAbove) {\n            _super.prototype.visitPseudoState.call(this, pseudoState, deepHistoryAbove);\n            // evaluate comppletion transitions once vertex entry is complete\n            if (pseudoState.isInitial()) {\n                endEnter(this.behaviour(pseudoState)).push(function (message, stateMachineInstance) {\n                    return traverse(pseudoState.outgoing[0], stateMachineInstance);\n                });\n            } else if (pseudoState.kind === StateJS.PseudoStateKind.Terminate) {\n                // terminate the state machine instance upon transition to a terminate pseudo state\n                beginEnter(this.behaviour(pseudoState)).push(function (message, stateMachineInstance) {\n                    return stateMachineInstance.isTerminated = true;\n                });\n            }\n        };\n        InitialiseElements.prototype.visitState = function (state, deepHistoryAbove) {\n            var _this = this;\n            // NOTE: manually iterate over the child regions to control the sequence of behaviour\n            state.regions.forEach(function (region) {\n                region.accept(_this, deepHistoryAbove);\n                leave(_this.behaviour(state)).push(leave(_this.behaviour(region)));\n                endEnter(_this.behaviour(state)).push(enter(_this.behaviour(region)));\n            });\n            this.visitVertex(state, deepHistoryAbove);\n            // add the user defined behaviour when entering and exiting states\n            leave(this.behaviour(state)).push(state.exitBehavior);\n            beginEnter(this.behaviour(state)).push(state.entryBehavior);\n            // update the parent regions current state\n            beginEnter(this.behaviour(state)).push(function (message, stateMachineInstance) {\n                if (state.region) {\n                    stateMachineInstance.setCurrent(state.region, state);\n                }\n            });\n        };\n        InitialiseElements.prototype.visitStateMachine = function (stateMachine, deepHistoryAbove) {\n            var _this = this;\n            _super.prototype.visitStateMachine.call(this, stateMachine, deepHistoryAbove);\n            // initiaise all the transitions once all the elements have been initialised\n            stateMachine.accept(new InitialiseTransitions(), function (element) {\n                return _this.behaviour(element);\n            });\n            // define the behaviour for initialising a state machine instance\n            stateMachine.onInitialise = enter(this.behaviour(stateMachine));\n        };\n        return InitialiseElements;\n    })(StateJS.Visitor);\n    var defaultConsole = {\n        log: function log(message) {\n            var optionalParams = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                optionalParams[_i - 1] = arguments[_i];\n            }\n        },\n        warn: function warn(message) {\n            var optionalParams = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                optionalParams[_i - 1] = arguments[_i];\n            }\n        },\n        error: function error(message) {\n            var optionalParams = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                optionalParams[_i - 1] = arguments[_i];\n            }\n            throw message;\n        }\n    };\n    /**\n     * The object used for log, warning and error messages\n     * @member {IConsole}\n     */\n    StateJS.console = defaultConsole;\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\nvar StateJS;\n(function (StateJS) {\n    /**\n     * Validates a state machine model for correctness (see the constraints defined within the UML Superstructure specification).\n     * @function validate\n     * @param {StateMachine} stateMachineModel The state machine model to validate.\n     */\n    function validate(stateMachineModel) {\n        stateMachineModel.accept(new Validator());\n    }\n    StateJS.validate = validate;\n    function ancestors(vertex) {\n        return (vertex.region ? ancestors(vertex.region.state) : []).concat(vertex);\n    }\n    var Validator = (function (_super) {\n        __extends(Validator, _super);\n        function Validator() {\n            _super.apply(this, arguments);\n        }\n        Validator.prototype.visitPseudoState = function (pseudoState) {\n            _super.prototype.visitPseudoState.call(this, pseudoState);\n            if (pseudoState.kind === StateJS.PseudoStateKind.Choice || pseudoState.kind === StateJS.PseudoStateKind.Junction) {\n                // [7] In a complete statemachine, a junction vertex must have at least one incoming and one outgoing transition.\n                // [8] In a complete statemachine, a choice vertex must have at least one incoming and one outgoing transition.\n                if (pseudoState.outgoing.length === 0) {\n                    StateJS.console.error(pseudoState + \": \" + pseudoState.kind + \" pseudo states must have at least one outgoing transition.\");\n                }\n                // choice and junction pseudo state can have at most one else transition\n                if (pseudoState.outgoing.filter(function (transition) {\n                    return transition.guard === StateJS.Transition.FalseGuard;\n                }).length > 1) {\n                    StateJS.console.error(pseudoState + \": \" + pseudoState.kind + \" pseudo states cannot have more than one Else transitions.\");\n                }\n            } else {\n                // non choice/junction pseudo state may not have else transitions\n                if (pseudoState.outgoing.filter(function (transition) {\n                    return transition.guard === StateJS.Transition.FalseGuard;\n                }).length !== 0) {\n                    StateJS.console.error(pseudoState + \": \" + pseudoState.kind + \" pseudo states cannot have Else transitions.\");\n                }\n                if (pseudoState.isInitial()) {\n                    if (pseudoState.outgoing.length !== 1) {\n                        // [1] An initial vertex can have at most one outgoing transition.\n                        // [2] History vertices can have at most one outgoing transition.\n                        StateJS.console.error(pseudoState + \": initial pseudo states must have one outgoing transition.\");\n                    } else {\n                        // [9] The outgoing transition from an initial vertex may have a behavior, but not a trigger or guard.\n                        if (pseudoState.outgoing[0].guard !== StateJS.Transition.TrueGuard) {\n                            StateJS.console.error(pseudoState + \": initial pseudo states cannot have a guard condition.\");\n                        }\n                    }\n                }\n            }\n        };\n        Validator.prototype.visitRegion = function (region) {\n            _super.prototype.visitRegion.call(this, region);\n            // [1] A region can have at most one initial vertex.\n            // [2] A region can have at most one deep history vertex.\n            // [3] A region can have at most one shallow history vertex.\n            var initial;\n            region.vertices.forEach(function (vertex) {\n                if (vertex instanceof StateJS.PseudoState && vertex.isInitial()) {\n                    if (initial) {\n                        StateJS.console.error(region + \": regions may have at most one initial pseudo state.\");\n                    }\n                    initial = vertex;\n                }\n            });\n        };\n        Validator.prototype.visitState = function (state) {\n            _super.prototype.visitState.call(this, state);\n            if (state.regions.filter(function (state) {\n                return state.name === StateJS.Region.defaultName;\n            }).length > 1) {\n                StateJS.console.error(state + \": a state cannot have more than one region named \" + StateJS.Region.defaultName);\n            }\n        };\n        Validator.prototype.visitFinalState = function (finalState) {\n            _super.prototype.visitFinalState.call(this, finalState);\n            // [1] A final state cannot have any outgoing transitions.\n            if (finalState.outgoing.length !== 0) {\n                StateJS.console.error(finalState + \": final states must not have outgoing transitions.\");\n            }\n            // [2] A final state cannot have regions.\n            if (finalState.regions.length !== 0) {\n                StateJS.console.error(finalState + \": final states must not have child regions.\");\n            }\n            // [4] A final state has no entry behavior.\n            if (finalState.entryBehavior.hasActions()) {\n                StateJS.console.warn(finalState + \": final states may not have entry behavior.\");\n            }\n            // [5] A final state has no exit behavior.\n            if (finalState.exitBehavior.hasActions()) {\n                StateJS.console.warn(finalState + \": final states may not have exit behavior.\");\n            }\n        };\n        Validator.prototype.visitTransition = function (transition) {\n            _super.prototype.visitTransition.call(this, transition);\n            // Local transition target vertices must be a child of the source vertex\n            if (transition.kind === StateJS.TransitionKind.Local) {\n                if (ancestors(transition.target).indexOf(transition.source) === -1) {\n                    StateJS.console.error(transition + \": local transition target vertices must be a child of the source composite sate.\");\n                }\n            }\n        };\n        return Validator;\n    })(StateJS.Visitor);\n})(StateJS || (StateJS = {}));\n/*\n * Finite state machine library\n * Copyright (c) 2014-5 Steelbreeze Limited\n * Licensed under the MIT and GPL v3 licences\n * http://www.steelbreeze.net/state.cs\n */\n//var module = module;\nmodule.exports = StateJS;\n\ncc._RFpop();\n},{}]},{},[\"AudioMng\",\"RankItem\",\"Decks\",\"ActorRenderer\",\"Menu\",\"Player\",\"Bet\",\"SideSwitcher\",\"PlayerData\",\"AssetMng\",\"Types\",\"Game\",\"game-fsm\",\"FXPlayer\",\"state.com\",\"Utils\",\"Actor\",\"NewScript\",\"ButtonScaler\",\"Card\",\"CounterTest\",\"TossChip\",\"Dealer\",\"InGameUI\",\"RankList\"]);\n"],"sourceRoot":"/source/"}