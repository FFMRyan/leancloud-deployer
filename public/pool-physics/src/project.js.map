{"version":3,"sources":["project.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","AssetMng","module","cc","_RFpush","Class","extends","Component","properties","ballImages","default","type","SpriteFrame","visible","onLoad","update","dt","_RFpop","Ball","Globals","Physics","BallType","Enum","CUE","NORMAL","phyObj","this","weight","instance","CUE_BALL_WEIGHT","BALL_WEIGHT","maxSpeed","MAX_SPEED","BALL_R","friction","FRICTION","elasticity","ELASTICITY","initPhysics","origin","node","_sgNode","getPosition","sprite","getComponent","SpriteRenderer","CircleObject","setFriction","setElasticity","start","self","eventManager","addListener","event","EventListener","TOUCH_ALL_AT_ONCE","onTouchesEnded","touches","fire","hideInstruction","stopPropagation","impules","cp","v","IMPULSE","body","applyImpulse","p","x","y","./GlobalSettings","./physics","GlobalSettings","Global","debugDisplay","instruction","ENode","ballGroups","ballNumberLevel","WALL_WIDTH","WALL_FRICTION","WALL_ELASTICITY","startInstructionBlink","active","director","setDisplayStats","fadeOut","fadeTo","fadeIn","blink","repeatForever","sequence","runAction","stopAllActions","restart","clear","loadScene","PhysicTable","space","debugNode","leftWall","rightWall","topWall","bottomWall","createPhysicsWorld","init","getRunningScene","world","gravity","WallW","WallElasticity","WallFriction","w","winSize","width","h","height","StaticObject","setupDebugNode","PhysicsDebugNode","create","parent","setPosition","addChild","physics","scene","inited","handlers","shapes","bodies","calculVector","getNormal","calculAngle","pToAngle","Space","iterations","step","addCollisionHandler","b","begin","preSolve","postSolve","separate","push","registerShape","shape","registerBody","_realClear","handler","removeCollisionHandler","containsShape","isStatic","removeStaticShape","removeShape","containsBody","removeBody","eachShape","eachBody","isLocked","addPostStepCallback","bind","StaticPolyObject","StaticSensor","DynamicSensor","PhysicsObject","_Class","extend","view","ctor","box","BoxShape2","staticBody","addShape","obj","removeSelf","verts","offset","PolyShape","SegmentShape","setSensor","Body","momentForBox","setPos","BoxShape","size","pos","addBody","setMaxSpeed","setView","move","direction","force","impulse","pRotateByAngle","degreesToRadians","targetMove","point","angle","pSub","v_limit","momentForCircle","CircleShape"],"mappings":"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","file":"project.js","sourcesContent":["require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"AssetMng\":[function(require,module,exports){\ncc._RFpush(module, '0c603JjbaVKjaNf1tpsYduy', 'AssetMng');\n// scripts/AssetMng.js\n\n\"use strict\";\n\ncc.Class({\n    \"extends\": cc.Component,\n\n    properties: {\n        ballImages: {\n            \"default\": [],\n            type: [cc.SpriteFrame],\n            visible: true\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    // called every frame\n    update: function update(dt) {}\n});\n\ncc._RFpop();\n},{}],\"Ball\":[function(require,module,exports){\ncc._RFpush(module, '8615fOmcHVCPJQ3Sh5zGWBQ', 'Ball');\n// scripts/Ball.js\n\n'use strict';\n\nvar Globals = require('./GlobalSettings');\nvar Physics = require('./physics');\n\nBallType = cc.Enum({\n    CUE: 0,\n    NORMAL: 1\n});\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        phyObj: {\n            'default': null,\n            visible: false\n        },\n\n        type: {\n            type: BallType,\n            'default': BallType.NORMAL\n        }\n\n    },\n\n    // weight : {\n    //     get: function () {\n    //         if (this.type === BallType.CUE) {\n    //             return Globals.instance.CUE_BALL_WEIGHT;\n    //         }\n    //         else {\n    //             return Globals.instance.BALL_WEIGHT;\n    //         }\n    //     },\n    //     readonly: true\n    // },\n    // maxSpeed : {\n    //     get: function () {\n    //         return Globals.instance.MAX_SPEED;\n    //     },\n    //     readonly: true\n    // },\n    // r : {\n    //     get: function () {\n    //         return Globals.instance.BALL_R;\n    //     },\n    //     readonly: true\n    // },\n    // friction : {\n    //     get: function () {\n    //         return Globals.instance.FRICTION;\n    //     },\n    //     readonly: true\n    // },\n    // elasticity : {\n    //     get: function () {\n    //         return Globals.instance.ELASTICITY;\n    //     },\n    //     readonly: true\n    // },\n    onLoad: function onLoad() {\n        if (this.type === BallType.CUE) {\n            this.weight = Globals.instance.CUE_BALL_WEIGHT;\n        } else {\n            this.weight = Globals.instance.BALL_WEIGHT;\n        }\n        this.maxSpeed = Globals.instance.MAX_SPEED;\n        this.r = Globals.instance.BALL_R;\n        this.friction = Globals.instance.FRICTION;\n        this.elasticity = Globals.instance.ELASTICITY;\n    },\n\n    initPhysics: function initPhysics() {\n        var origin = this.node._sgNode.getPosition();\n\n        var sprite = this.getComponent(cc.SpriteRenderer);\n\n        this.phyObj = new Physics.CircleObject(this.weight, this.r, this.maxSpeed, sprite, origin);\n        this.phyObj.setFriction(this.friction);\n        this.phyObj.setElasticity(this.elasticity);\n        // var body = this.phyObj.body;\n        // body.setMoment(Infinity);\n        // this.phyObj.shape.setCollisionType(Player.COL_TYPE);\n    },\n\n    // use this for initialization\n    start: function start() {\n        this.initPhysics();\n        var self = this;\n        if (self.type !== BallType.CUE) return;\n        cc.eventManager.addListener({\n            event: cc.EventListener.TOUCH_ALL_AT_ONCE,\n            onTouchesEnded: function onTouchesEnded(touches, event) {\n                // var sprite = self.getComponent(cc.SpriteRenderer)._sgNode;\n                // var pos = touches[0].getLocation();\n                // var s = sprite.getContentSize();\n\n                // touch always kicks cue ball\n                self.fire();\n\n                Globals.instance.hideInstruction();\n\n                // Stop propagation, so yellow blocks will not be able to receive event.\n                event.stopPropagation();\n            }\n        }, this);\n    },\n\n    fire: function fire() {\n        var impules = cp.v(-Globals.instance.IMPULSE, 0);\n        this.phyObj.body.applyImpulse(impules, cp.v(0, 0));\n    },\n\n    // called every frame\n    update: function update(dt) {\n        var p = this.phyObj.getPosition();\n        this.node.x = p.x;\n        this.node.y = p.y;\n    }\n});\n\ncc._RFpop();\n},{\"./GlobalSettings\":\"GlobalSettings\",\"./physics\":\"physics\"}],\"GlobalSettings\":[function(require,module,exports){\ncc._RFpush(module, '6db33nAO2xER6r5mtCHKbXR', 'GlobalSettings');\n// scripts/GlobalSettings.js\n\n'use strict';\n\nvar Physics = require('./physics');\nvar Global = cc.Class({\n    'extends': cc.Component,\n    // editor: {\n    //     executeInEditMode: true\n    // },\n\n    properties: {\n        debugDisplay: true,\n        instruction: {\n            'default': null,\n            type: cc.ENode\n        },\n        ballGroups: {\n            'default': [],\n            type: [cc.ENode]\n        },\n        ballNumberLevel: 1,\n        CUE_BALL_WEIGHT: 2,\n        BALL_WEIGHT: 1,\n        BALL_R: 15,\n        MAX_SPEED: 200,\n        FRICTION: 0.25,\n        ELASTICITY: 0.3,\n        IMPULSE: 200,\n        WALL_WIDTH: 32,\n        WALL_FRICTION: 1.0,\n        WALL_ELASTICITY: 2.0\n    },\n\n    onLoad: function onLoad() {\n        Global.instance = this;\n        this.startInstructionBlink();\n        for (var i = 0; i < this.ballGroups.length; ++i) {\n            if (this.ballNumberLevel < i) {\n                this.ballGroups[i].active = false;\n            }\n        }\n\n        cc.director.setDisplayStats(true);\n    },\n\n    startInstructionBlink: function startInstructionBlink() {\n        // show instruction\n        var fadeOut = cc.fadeTo(0.5, 0);\n        var fadeIn = cc.fadeTo(0.5, 255);\n\n        var blink = cc.repeatForever(cc.sequence(fadeOut, fadeIn));\n        this.instruction._sgNode.runAction(blink);\n    },\n\n    hideInstruction: function hideInstruction() {\n        this.instruction._sgNode.stopAllActions();\n        this.instruction.active = false;\n    },\n\n    restart: function restart() {\n        Physics.clear();\n        cc.director.loadScene('table');\n    }\n\n});\n\ncc._RFpop();\n},{\"./physics\":\"physics\"}],\"PhysicTable\":[function(require,module,exports){\ncc._RFpush(module, '0ccb0Zik3NAA5WJ2AKPmctJ', 'PhysicTable');\n// scripts/PhysicTable.js\n\n'use strict';\n\nvar Physics = require('./physics');\nvar Globals = require('./GlobalSettings');\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        space: {\n            'default': null,\n            visible: false\n        },\n        debugNode: {\n            'default': null,\n            visible: false\n        },\n        leftWall: {\n            'default': null,\n            visible: false\n        },\n        rightWall: {\n            'default': null,\n            visible: false\n        },\n        topWall: {\n            'default': null,\n            visible: false\n        },\n        bottomWall: {\n            'default': null,\n            visible: false\n        }\n    },\n\n    createPhysicsWorld: function createPhysicsWorld() {\n        Physics.init(cc.director.getRunningScene());\n        this.space = Physics.world;\n        // Gravity\n        this.space.gravity = cp.v(0, 0);\n\n        var WallW = Globals.instance.WALL_WIDTH;\n        var WallElasticity = Globals.instance.WALL_ELASTICITY;\n        var WallFriction = Globals.instance.WALL_FRICTION;\n\n        var w = cc.winSize.width,\n            h = cc.winSize.height;\n        this.leftWall = new Physics.StaticObject(0, 0, WallW, h, null);\n        this.topWall = new Physics.StaticObject(0, h - WallW, w, WallW, null);\n        this.rightWall = new Physics.StaticObject(w - WallW, 0, WallW, h, null);\n        this.bottomWall = new Physics.StaticObject(0, 0, w, WallW, null);\n\n        this.leftWall.setElasticity(WallElasticity);\n        this.leftWall.setFriction(WallFriction);\n        this.topWall.setElasticity(WallElasticity);\n        this.topWall.setFriction(WallFriction);\n        this.rightWall.setElasticity(WallElasticity);\n        this.rightWall.setFriction(WallFriction);\n        this.bottomWall.setElasticity(WallElasticity);\n        this.bottomWall.setFriction(WallFriction);\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.createPhysicsWorld();\n        if (Globals.instance.debugDisplay) {\n            this.setupDebugNode();\n        }\n        // cc.find('Canvas/balls')._sgNode.visible = false;\n        // cc.find('Canvas/pool_table')._sgNode.visible = false;\n    },\n\n    setupDebugNode: function setupDebugNode() {\n        this.debugNode = cc.PhysicsDebugNode.create(this.space);\n        this.debugNode.visible = true;\n\n        var parent = this.node._sgNode;\n        this.debugNode.setPosition(-parent.x, -parent.y);\n        parent.addChild(this.debugNode, 100);\n    },\n\n    // called every frame\n    update: function update(dt) {\n        Physics.update(dt);\n    }\n});\n\ncc._RFpop();\n},{\"./GlobalSettings\":\"GlobalSettings\",\"./physics\":\"physics\"}],\"physics\":[function(require,module,exports){\ncc._RFpush(module, '84454wOejlF9IFadHUVtTNz', 'physics');\n// scripts/physics.js\n\n\"use strict\";\n\nvar CPSTEP = 1 / 60;\nvar Physics = {\n    world: null,\n    scene: null,\n    inited: null,\n    handlers: [],\n    shapes: [],\n    bodies: [],\n\n    calculVector: function calculVector(a) {\n        /*var s = a.a, d = a.b;\n         var cs = cc.p((s.bb_b+s.bb_t)/2, (s.bb_l+s.bb_r)/2);\n         var cd = cc.p((d.bb_b+d.bb_t)/2, (d.bb_l+d.bb_r)/2);\n         */\n        var n = a.getNormal(0);\n        var v = cc.p(n.x, -n.y);\n        return v;\n    },\n    calculAngle: function calculAngle(a) {\n        return cc.pToAngle(this.calculVector(a));\n    },\n\n    init: function init(scene) {\n        this.scene = scene;\n        if (this.inited) return;\n\n        this.world = null;\n        var space = this.world = new cp.Space();\n        space.iterations = 60;\n        //        space.sleepTimeThreshold = 0.5;\n        // space.damping = 1;\n        // Gravity:\n        // space.gravity = cp.v(0,-1200);//重力\n        // space.collisionSlop = 0.5;\n\n        var emptyFunction = function emptyFunction() {\n            return true;\n        };\n        this.inited = true;\n    },\n    update: function update(dt) {\n        if (this.inited) this.world.step(dt);\n    },\n    addCollisionHandler: function addCollisionHandler(a, b, begin, preSolve, postSolve, separate) {\n        if (this.inited) {\n            this.world.addCollisionHandler(a, b, begin, preSolve, postSolve, separate);\n            this.handlers.push([a, b]);\n        }\n    },\n    registerShape: function registerShape(shape) {\n        Physics.shapes.push(shape);\n    },\n    registerBody: function registerBody(body) {\n        Physics.bodies.push(body);\n    },\n\n    _realClear: function _realClear() {\n        if (this.inited) {\n            var space = this.world,\n                handler,\n                shape,\n                body;\n            // Remove handlers\n            for (var i = this.handlers.length - 1; i >= 0; --i) {\n                handler = this.handlers[i];\n                space.removeCollisionHandler(handler[0], handler[1]);\n            }\n            this.handlers = [];\n\n            // Remove shapes\n            for (var i = this.shapes.length - 1; i >= 0; --i) {\n                shape = this.shapes[i];\n                if (!space.containsShape(shape)) continue;\n                if (shape.body.isStatic()) space.removeStaticShape(shape);else space.removeShape(shape);\n            }\n            this.shapes = [];\n\n            // Remove bodies\n            for (var i = this.bodies.length - 1; i >= 0; --i) {\n                body = this.bodies[i];\n                if (!space.containsBody(body)) continue;\n                space.removeBody(body);\n            }\n            this.bodies = [];\n        }\n    },\n    clear: function clear() {\n        var space = this.world;\n        if (space) {\n            space.eachShape(this.registerShape);\n            space.eachBody(this.registerBody);\n            if (space.isLocked()) space.addPostStepCallback(this._realClear.bind(this));else this._realClear();\n        }\n    },\n\n    StaticObject: null,\n    StaticPolyObject: null,\n    StaticSensor: null,\n    DynamicSensor: null,\n    PhysicsObject: null,\n    CircleObject: null\n};\nPhysics.StaticObject = cc._Class.extend({\n    view: null,\n    shape: null,\n\n    ctor: function ctor(x, y, width, height, view) {\n        var box = {};\n        box.l = x;\n        box.r = x + width;\n        box.t = y + height;\n        box.b = y;\n        this.shape = new cp.BoxShape2(Physics.world.staticBody, box);\n        Physics.world.addShape(this.shape);\n        this.shape.obj = this;\n        this.view = view;\n    },\n\n    setFriction: function setFriction(u) {\n        this.shape.setFriction(u);\n    },\n\n    setElasticity: function setElasticity(e) {\n        this.shape.setElasticity(e);\n    },\n\n    removeSelf: function removeSelf() {\n        Physics.world.removeStaticShape(this.shape);\n    }\n});\nPhysics.StaticPolyObject = cc._Class.extend({\n    view: null,\n    shape: null,\n    ctor: function ctor(view, verts, offset) {\n        this.shape = new cp.PolyShape(Physics.world.staticBody, verts, offset || cp.v(0, 0));\n        Physics.world.addShape(this.shape);\n        this.shape.obj = this;\n        this.view = view;\n    },\n\n    setFriction: function setFriction(u) {\n        this.shape.setFriction(u);\n    },\n\n    setElasticity: function setElasticity(e) {\n        this.shape.setElasticity(e);\n    },\n\n    removeSelf: function removeSelf() {\n        Physics.world.removeStaticShape(this.shape);\n    }\n});\n\nPhysics.StaticSensor = cc._Class.extend({\n    view: null,\n    shape: null,\n\n    ctor: function ctor(x, y, width, height, view) {\n        this.shape = new cp.SegmentShape(Physics.world.staticBody, cp.v(x, y + height), cp.v(x + width, y + height), 5);\n        this.shape.setSensor(true);\n        Physics.world.addShape(this.shape);\n        this.shape.obj = this;\n        this.view = view;\n    },\n\n    removeSelf: function removeSelf() {\n        Physics.world.removeStaticShape(this.shape);\n    }\n});\nPhysics.DynamicSensor = cc._Class.extend({\n    body: null,\n    shape: null,\n    view: null,\n\n    ctor: function ctor(x, y, width, height, view) {\n        this.body = new cp.Body(1, cp.momentForBox(1, width, height));\n        this.body.setPos(cp.v(x, y));\n        this.shape = new cp.BoxShape(this.body, width, height);\n        this.shape.setSensor(true);\n        Physics.world.addShape(this.shape);\n        this.shape.obj = this;\n        this.view = view;\n    },\n\n    removeSelf: function removeSelf() {\n        Physics.world.removeShape(this.shape);\n        Physics.world.removeBody(this.body);\n    }\n});\nPhysics.PhysicsObject = cc._Class.extend({\n    body: null,\n    shape: null,\n    type: null,\n    view: null,\n\n    ctor: function ctor(weight, size, maxSpeed, view, pos) {\n        this.body = new cp.Body(weight, cp.momentForBox(weight, size.width, size.height));\n        this.shape = new cp.BoxShape(this.body, size.width, size.height);\n        Physics.world.addShape(this.shape);\n        Physics.world.addBody(this.body);\n        this.setMaxSpeed(maxSpeed);\n        this.setView(view);\n        if (pos) {\n            this.setPosition(pos);\n        }\n        this.shape.obj = this;\n    },\n    setPosition: function setPosition(pos) {\n        this.body.setPos(pos);\n    },\n    //move towards a direction\n    move: function move(direction, force) {\n        var v = cc.p(force, 0);\n        var impulse = cc.pRotateByAngle(v, cc.p(0, 0), cc.degreesToRadians(direction));\n        this.body.applyImpulse(impulse, cp.v(0, 0));\n    },\n    //move towards a point, regardless of where i am\n    targetMove: function targetMove(point, force) {\n        var v = cc.p(force, 0);\n        var angle = cc.pToAngle(cc.pSub(point, this.body.p));\n        var impulse = cc.pRotateByAngle(v, cc.p(0, 0), angle);\n        this.body.applyImpulse(impulse, cp.v(0, 0));\n    },\n    setMaxSpeed: function setMaxSpeed(maxSpeed) {\n        this.body.v_limit = maxSpeed;\n    },\n    getPosition: function getPosition() {\n        return this.body.p;\n    },\n    //so shape can find its parent object\n    setView: function setView(v) {\n        this.view = v;\n    },\n\n    setFriction: function setFriction(u) {\n        this.shape.setFriction(u);\n    },\n\n    setElasticity: function setElasticity(e) {\n        this.shape.setElasticity(e);\n    },\n\n    removeSelf: function removeSelf() {\n        Physics.world.removeShape(this.shape);\n        Physics.world.removeBody(this.body);\n    }\n});\n\nPhysics.CircleObject = Physics.PhysicsObject.extend({\n    ctor: function ctor(weight, r, maxSpeed, view, pos) {\n        this.body = new cp.Body(weight, cp.momentForCircle(weight, 0, r, cp.v(0, 0)));\n        this.shape = new cp.CircleShape(this.body, r, cp.v(0, 0));\n        Physics.world.addShape(this.shape);\n        Physics.world.addBody(this.body);\n        this.setMaxSpeed(maxSpeed);\n        this.setView(view);\n        if (pos) {\n            this.setPosition(pos);\n        }\n        this.shape.obj = this;\n    }\n});\n\nmodule.exports = Physics;\n\ncc._RFpop();\n},{}]},{},[\"AssetMng\",\"PhysicTable\",\"GlobalSettings\",\"physics\",\"Ball\"]);\n"],"sourceRoot":"/source/"}